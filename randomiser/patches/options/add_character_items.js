const { writeArray, write32b, read32b } = require('../../../util/binary.js');
const { setTalkObject } = require('../../../util/npcWriter');
const textutil = require('../../game_logic/textutil.js');

const tableAddr = 0xFFAA00;
const iconAddr = 0xFFB000;

function apply(rom, mapCode, settings, text) {
    // Insert the new icons
    writeArray(rom, iconAddr, [0x0, 0xE6, 0xB7, 0x0, 0xB6, 0x53, 0x55, 0x5, 0x40, 0x97, 0x6E, 0x0, 0xBA, 0xD3, 0xA2, 0x1A, 0x8, 0xBA, 0x15, 0x8D, 0x86, 
        0x92, 0x88, 0x14, 0xE9, 0xFF, 0xC, 0x3A, 0x95, 0x1A, 0xAA, 0xD2, 0x55, 0x15, 0x89, 0xE9, 0x51, 0xC5, 0x5F, 0x76, 0x51, 0x66, 0x67, 0xCC, 0xAC, 
        0x6A, 0x49, 0x57, 0xEF, 0xD4, 0x4C, 0xED, 0x7F, 0xD5, 0x3A, 0xA6, 0x8F, 0x74, 0xE6, 0xBF, 0x92, 0xAA, 0xCE, 0x40, 0xF4, 0x94, 0x54, 0x69, 0x60, 
        0xB, 0xA4, 0x0, 0x2, 0x2, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0xA0, 0xF3, 0x2B, 0x15, 0x40, 0xA9, 0x20, 0x93, 0x86, 0xEE, 0xBF, 0x5B, 0xA8, 0x9E, 0xC5, 
        0x74, 0x2C, 0x62, 0xB2, 0x4B, 0x31, 0x5D, 0xB6, 0x8B, 0x41, 0x2A, 0x3A, 0x12, 0x95, 0x46, 0x77, 0x27, 0x91, 0x24, 0x33, 0x58, 0xB3, 0x41, 0x52, 
        0x9A, 0x3F, 0x25, 0x20, 0xA2, 0x44, 0xE5, 0xBF, 0xFF, 0x4A, 0xAA, 0x3A, 0x86, 0xD0, 0xFF, 0x95, 0x54, 0xD1, 0x30, 0xD5, 0x53, 0x52, 0xD5, 0x3, 0xA4, 
        0x40, 0xA, 0x20, 0x20, 0x0, 0x0, 0xF0, 0xFF, 0x0, 0x0, 0x0, 0x43, 0x0, 0x90, 0x29, 0x0, 0xFC, 0x56, 0x57, 0xA5, 0x1, 0xD2, 0x20, 0x5, 0x74, 0x23, 
        0x21, 0x5, 0x5, 0x15, 0xFF, 0x85, 0x46, 0x3A, 0x9D, 0x9, 0x15, 0x43, 0x26, 0x9D, 0xFA, 0x4B, 0xE9, 0xD4, 0xB0, 0xD5, 0x53, 0x56, 0xB4, 0xD4, 0x4A, 
        0x33, 0xFF, 0xB5, 0xD4, 0x4E, 0x66, 0xA9, 0xCE, 0xFC, 0xB7, 0x52, 0x35, 0xB3, 0x50, 0x3D, 0x5B, 0x52, 0xD5, 0x3, 0x3C, 0xD, 0x52, 0x0, 0x1, 0x1, 0x0, 
        0x80, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xF0, 0x9F, 0x7, 0x51, 0x80, 0xFC, 0x97, 0xAF, 0x2A, 0x69, 0xC0, 0xFC, 0xE4, 0x3F, 0x49, 0x6E, 0x40, 0x4F, 
        0x4F, 0x77, 0x75, 0xF5, 0xC0, 0xD4, 0xDC, 0xFE, 0x2B, 0xD5, 0xB3, 0x87, 0xD4, 0x3C, 0xCF, 0xBF, 0x52, 0xFD, 0xDC, 0x83, 0xE7, 0xDD, 0xBC, 0x48, 0xA5, 
        0x87, 0x79, 0x6F, 0xD3, 0x48, 0xA5, 0x7B, 0x44, 0xE5, 0x7D, 0x4A, 0xAA, 0x3A, 0x86, 0xD0, 0x5B, 0x52, 0x45, 0xA3, 0xAF, 0xA7, 0x4B, 0xAA, 0xBA, 0x7, 
        0xB1, 0x3, 0x52, 0x1A, 0x92, 0x2, 0xA9, 0x0, 0x0, 0xF0, 0xFF, 0x0, 0xF0, 0x17, 0x0, 0xC8, 0x5F, 0x1, 0xD4, 0x3F, 0x49, 0x14, 0x40, 0xA0, 0xA3, 0x80, 
        0x54, 0x48, 0x24, 0x5, 0xA5, 0x92, 0x48, 0x5C, 0x35, 0x52, 0x8D, 0xA2, 0xA4, 0x89, 0x92, 0xAE, 0x84, 0x98, 0x91, 0x69, 0xFF, 0x14, 0xAB, 0x4D, 0x56, 
        0xD, 0x2B, 0x23, 0xD1, 0x35, 0xD2, 0x99, 0xFF, 0xFE, 0xAB, 0xD6, 0x99, 0xDC, 0x51, 0x6B, 0xA7, 0xA4, 0xAA, 0xD, 0x52, 0x7A, 0x4A, 0xAA, 0xF4, 0x20, 
        0xD9, 0x6, 0xE9, 0x1D, 0xA0, 0x41, 0x74, 0x0, 0x80, 0xC4, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xE0, 0xEF, 0x67, 0xA4, 0x1A, 0x20, 0xDD, 0x27, 0xD5, 0x3, 0x88, 
        0xFA, 0x93, 0xD2, 0x40, 0xF1, 0xB4, 0x69, 0x6, 0xFE, 0xA9, 0x93, 0x48, 0xA4, 0x1A, 0x3B, 0xDC, 0x49, 0x71, 0x8B, 0x35, 0xFD, 0xF, 0x52, 0xE9, 0x61, 
        0xAA, 0xB7, 0x1A, 0xA9, 0xAD, 0x5E, 0x79, 0x6E, 0xFE, 0xFB, 0x6F, 0xA5, 0x7A, 0x76, 0x8F, 0x7C, 0xB9, 0x29, 0xA9, 0xEA, 0xC, 0x44, 0x4F, 0x49, 0x95, 
        0x6, 0xA6, 0x40, 0xA, 0x20, 0x20, 0x0, 0x0, 0xF0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xC0, 0x2F, 0x2, 0x20, 0xC, 0x51, 0x40, 0x8A, 0x4D, 0xA2, 0x1A, 0xAA, 
        0x11, 0x42, 0xA, 0x29, 0x0, 0x8A, 0xAA, 0xFF, 0x10, 0x41, 0x69, 0x69, 0x1D, 0x11, 0x9, 0x2D, 0x74, 0x92, 0x24, 0x49, 0x94, 0x50, 0xE3, 0x4F, 0x54, 
        0xCB, 0x48, 0x65, 0xF6, 0x9F, 0x92, 0xAA, 0x9E, 0x2C, 0xA9, 0x9E, 0x7F, 0x4A, 0xAA, 0x7A, 0x16, 0xA9, 0x67, 0x40, 0xAA, 0x7, 0x92, 0x6, 0xA9, 0x0, 
        0x0, 0xF0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0xC0, 0x21, 0x0, 0xE2, 0x9F, 0x4F, 0x4A, 0x3, 0xF9, 0x6F, 0x4C, 0x7E, 0xC8, 0xC2, 0xF6, 0x8C, 0x88, 0x94, 0x41, 
        0xBA, 0xB7, 0x5B, 0xAA, 0xBB, 0x87, 0x54, 0x57, 0xFD, 0xFD, 0x23, 0xD5, 0x53, 0xB5, 0x52, 0xFF, 0xD6, 0xCF, 0xBF, 0x91, 0x54, 0x5F, 0x1D, 0x75, 0xE7, 
        0x22, 0x51, 0x3D, 0x48, 0xFD, 0xFC, 0xFC, 0xF7, 0x23, 0xD5, 0xB3, 0xC7, 0x57, 0xFD, 0x5C, 0x97, 0x54, 0x75, 0xDF, 0x69, 0x35, 0xBB, 0x25, 0x55, 0xDD, 
        0xB3, 0x24, 0xBF, 0xB, 0x52, 0x1D, 0xA0, 0x40, 0x0, 0x0, 0xE0, 0xFF]);

    // Move the psynergy icon table so we have more room
    moveIconTable(rom);
    write32b(rom, 0x3D4DC, 0x08000000 + tableAddr + 0x430);
    write32b(rom, 0x3D4E0, 0x08000000 + tableAddr);
    write32b(rom, 0x3DA74, 0x08000000 + tableAddr);

    // Write the new icons into the table
    writeArray(rom, tableAddr + 0x410, [0x0, 0xB0, 0xFF, 0x8, 0x4E, 0xB0, 0xFF, 0x8, 0x98, 0xB0, 0xFF, 0x8, 0xE0, 0xB0, 0xFF, 0x8,
        0x33, 0xB1, 0xFF, 0x8, 0x7F, 0xB1, 0xFF, 0x8, 0xCA, 0xB1, 0xFF, 0x8, 0xF, 0xB2, 0xFF, 0x8, 0xFF, 0xFF, 0xFF, 0xFF]);

    // Add icon mappings for the character pseudo-items to be displayed as
    writeArray(rom, 0x0100311C, [0x0, 0xD, 0x4, 0x1, 0x1, 0xD, 0x5, 0x1, 0x2, 0xD, 0x6, 0x1, 0x3, 0xD, 0x7, 0x1,
        0x4, 0xD, 0x8, 0x1, 0x5, 0xD, 0x9, 0x1, 0x6, 0xD, 0xA, 0x1, 0x7, 0xD, 0xB, 0x1]);

    // Replace Djinni overflow function with a queue variant
    writeArray(rom, 0x01006D00, [0x40, 0x46, 0x81, 0xB4, 0x0, 0xF0, 0x28, 0xF8, 0x8, 0x28, 0x1A, 0xD0, 0x9, 0x25, 0x45, 0x43, 0x80, 0x46, 0x0, 0x26, 0x30, 
        0x27, 0x38, 0x1C, 0x0, 0xF0, 0x26, 0xF8, 0x36, 0x18, 0x1, 0x37, 0x80, 0x2F, 0xF8, 0xDB, 0xAE, 0x42, 0xC, 0xDB, 0x11, 0x48, 0x1, 0x78, 0x49, 0x1C, 
        0x1, 0x70, 0x49, 0x0, 0x40, 0x18, 0x82, 0xBC, 0x88, 0x46, 0x39, 0x0, 0x52, 0x46, 0x1, 0x70, 0x42, 0x70, 0x6, 0xE0, 0x81, 0xBC, 0x80, 0x46, 0x39, 
        0x1C, 0x52, 0x46, 0x48, 0x46, 0x0, 0xF0, 0x8, 0xF8, 0x0, 0x4C, 0x20, 0x47, 0x55, 0xB, 0xB, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xBD, 0xFD, 0xA, 0x8, 0x0, 
        0x4C, 0x20, 0x47, 0x79, 0xB, 0xB, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xE5, 0x6C, 0x1, 0x8, 0x80, 0x29, 0x0, 0x2]);

    // Update party initialisation code
    writeArray(rom, 0x01000806, [0x4, 0xE0]);
    writeArray(rom, 0x01000818, [0x4, 0xE0]);

    mapCode[1616][0] = true;
    writeArray(mapCode[1616][1], 0x2FD4, [0x60, 0xB5, 0x82, 0xB0, 0xD0, 0x20, 0x0, 0x1, 0x5, 0x30, 0x5, 0x0, 0x0, 0xF0, 0xB6, 0xF8, 0x0, 0x28, 0x1A, 0xD1, 
        0x0, 0xF0, 0xE6, 0xF8, 0x0, 0xF0, 0x84, 0xF9, 0x0, 0xF0, 0x8A, 0xF9, 0xA, 0x48, 0x0, 0x21, 0x40, 0x5C, 0x0, 0xF0, 0x15, 0xF8, 0x28, 0x0, 0x0, 0xF0, 
        0xAA, 0xF8, 0x7, 0x4D, 0x28, 0x88, 0x69, 0x88, 0x0, 0x29, 0x5, 0xD0, 0x4, 0x35, 0x4, 0x28, 0xF8, 0xD1, 0x0, 0xF0, 0xC, 0xF8, 0xF5, 0xE7, 0x0, 0xF0, 
        0xD1, 0xF8, 0x74, 0xE0, 0x88, 0x1, 0xFA, 0x8, 0xE0, 0x0, 0xFA, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xBD, 0x60, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0x39, 0x50, 
        0x0, 0x9]);
    mapCode[1616][1][0x2F50] = 0x2;
    mapCode[1616][1][0x2F80] = 0x9;

    // Prevent issues with Piers leaving the party in Kibombo
    mapCode[1648][0] = true;
    writeArray(mapCode[1648][1], 0x7AE, [0x7, 0xE0]);
    writeArray(mapCode[1648][1], 0xC90, [0x0, 0xB5, 0x9, 0x20, 0x0, 0x2, 0x2E, 0x30, 0x4, 0xF0, 0xBC, 0xFE, 0x0, 0xBD]);
    writeArray(mapCode[1648][1], 0x5256, [0x8, 0xE0]);

    // Update Idejima map code to replace Sheba with items
    var eventId = 10 + settings['avoid-patch'] + settings['qol-hints'];
    var npcAddr = 0x3874 + (0x18 * (eventId - 10))
    var eventAddr = 0x394C + (0x18 * (eventId - 10));
    mapCode[1616][1].splice(eventAddr, 0, ...[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    setTalkObject(mapCode[1616][1], npcAddr, eventAddr, eventId, 0x1E9, 0xD06, 0x38, 0, 0x2C0, 4, 2, 0x020082B5);

    writeArray(mapCode[1616][1], 0x2ECA, [0xFD, 0xF7, 0x11, 0xF9]);
    writeArray(mapCode[1616][1], 0xF0, [0x20, 0xB5, 0x1, 0xF0, 0x23, 0xFA, 0xD0, 0x20, 0x0, 0x1, 0x6, 0x30, 0x3, 0xF0, 0x28, 0xF8, 0x0, 0x28, 0xE, 0xD1, 
        eventId, 0x25, 0x28, 0x0, 0x3, 0xF0, 0x66, 0xF8, 0xD0, 0x21, 0x9, 0x1, 0x6, 0x31, 0x0, 0xF0, 0x7, 0xF8, 0x28, 0x0, 0x3, 0xF0, 0x5E, 0xF8, 0x0, 
        0x21, 0x3, 0xF0, 0x3B, 0xF8, 0x20, 0xBD, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x3, 0x2, 0x8]);
    writeArray(mapCode[1616][1], 0x2B4, [0x20, 0xB5, 0x2, 0xF0, 0x7F, 0xFF, 0x0, 0x20, 0x3, 0xF0, 0x28, 0xF8, 0xC, 0x48, 0x0, 0x88, 0x5, 0x0, 0x0, 0xF0, 
        0x1B, 0xF8, 0x1, 0x28, 0x4, 0xD0, 0x53, 0x20, 0x0, 0xF0, 0x1A, 0xF8, 0x0, 0xF0, 0x10, 0xF8, eventId, 0x20, 0x0, 0x21, 0x0, 0x22, 0x0, 0xF0, 0x17, 
        0xF8, 0xD0, 0x20, 0x0, 0x1, 0x6, 0x30, 0x2, 0xF0, 0x36, 0xFF, 0x2, 0xF0, 0x68, 0xFF, 0x20, 0xBD, 0x0, 0x0, 0x8A, 0x1, 0xFA, 0x8, 0x0, 0x4C, 0x20, 
        0x47, 0x7, 0x2, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x60, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0xB1, 0xC, 0x1C, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xF9, 
        0x80, 0xC, 0x8]);

    // Update Kibombo map code to replace Piers with an item
    setTalkObject(mapCode[1648][1], 0x6C48, 0x7590, 0x1A, 0x1E9, 0xD07, 0x80, 0, 0x170, 4, 2, 0x02009319);

    writeArray(mapCode[1648][1], 0x2050, [0x70, 0x47]);
    writeArray(mapCode[1648][1], 0x3DEE, [0x5C, 0xE1]);
    writeArray(mapCode[1648][1], 0x55DE, [0xFB, 0xF7, 0xF3, 0xF8]);
    writeArray(mapCode[1648][1], 0x7C8, [0x0, 0xB5, 0x4, 0xF0, 0xDF, 0xFD, 0xD0, 0x20, 0x0, 0x1, 0x7, 0x30, 0x5, 0xF0, 0x1A, 0xF9, 0x0, 0x28, 0xD, 0xD1, 
        0x1A, 0x20, 0x5, 0xF0, 0x71, 0xF9, 0xD0, 0x21, 0x9, 0x1, 0x7, 0x31, 0x0, 0xF0, 0xC, 0xF8, 0x1A, 0x20, 0x5, 0xF0, 0x69, 0xF9, 0x0, 0x21, 0x5, 0xF0, 
        0x3E, 0xF9, 0x7, 0x20, 0x0, 0x21, 0x0, 0x22, 0x5, 0xF0, 0x85, 0xF9, 0x0, 0xBD, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x3, 0x2, 0x8]);
    writeArray(mapCode[1648][1], 0x1318, [0x20, 0xB5, 0x4, 0xF0, 0xBF, 0xFB, 0x0, 0x20, 0x4, 0xF0, 0x8C, 0xFC, 0x10, 0x48, 0x0, 0x88, 0x5, 0x0, 0x0, 0xF0, 
        0x23, 0xF8, 0x1, 0x28, 0x6, 0xD0, 0x53, 0x20, 0x0, 0xF0, 0x22, 0xF8, 0x0, 0xF0, 0x18, 0xF8, 0x0, 0x28, 0xA, 0xDB, 0x1A, 0x20, 0x0, 0x21, 0x0, 0x22, 
        0x0, 0xF0, 0x1D, 0xF8, 0xD0, 0x20, 0x0, 0x1, 0x7, 0x30, 0x4, 0xF0, 0x60, 0xFB, 0x4, 0xE0, 0xE2, 0x20, 0x0, 0x1, 0x0, 0x21, 0x0, 0xF0, 0x16, 0xF8, 
        0x4, 0xF0, 0xA0, 0xFB, 0x20, 0xBD, 0x0, 0x0, 0x8C, 0x1, 0xFA, 0x8, 0x0, 0x4C, 0x20, 0x47, 0x7, 0x2, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x60, 
        0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0xB1, 0xC, 0x1C, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xF9, 0x80, 0xC, 0x8, 0x0, 0x4C, 0x20, 0x47, 0x41, 0x80, 0x3, 0x8]);

    // Update Contigo map code to replace reunion with items
    mapCode[1684][0] = true
    setTalkObject(mapCode[1684][1], 0x5228, 0x5E7C, 0x8, 0x1E9, 0xD00, 0x78, 0, 0x160, 4, 2, 0x02009D98);
    setTalkObject(mapCode[1684][1], 0x5240, 0x5E88, 0x9, 0x1E9, 0xD01, 0x90, 0, 0x160, 4, 2, 0x02009D98);
    setTalkObject(mapCode[1684][1], 0x5258, 0x5E94, 0xA, 0x1E9, 0xD02, 0xA8, 0, 0x160, 4, 2, 0x02009D98);
    setTalkObject(mapCode[1684][1], 0x5270, 0x5EA0, 0xB, 0x1E9, 0xD03, 0xC0, 0, 0x160, 4, 2, 0x02009D98);
    writeArray(mapCode[1684][1], 0x5288, [0xFF, 0xFF, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);

    writeArray(mapCode[1684][1], 0x802, [0x14, 0xE0]);
    writeArray(mapCode[1684][1], 0x374C, [0x1A, 0xE0]);
    writeArray(mapCode[1684][1], 0x39F4, [0xFE, 0xF7, 0xAE, 0xF9, 0x42, 0xE0]);
    writeArray(mapCode[1684][1], 0x1D50, [0x70, 0x47, 0x0, 0x0, 0x60, 0xB5, 0xD0, 0x20, 0x0, 0x1, 0x5, 0x0, 0x0, 0x26, 0x28, 0x0, 0x80, 0x19, 0x2, 0xF0, 
        0x2F, 0xF9, 0x0, 0x28, 0xE, 0xD1, 0x8, 0x20, 0x80, 0x19, 0x2, 0xF0, 0x8D, 0xF9, 0x29, 0x0, 0x89, 0x19, 0x0, 0xF0, 0xB, 0xF8, 0x8, 0x20, 0x80, 
        0x19, 0x2, 0xF0, 0x85, 0xF9, 0x0, 0x21, 0x2, 0xF0, 0x46, 0xF9, 0x1, 0x36, 0x4, 0x2E, 0xE7, 0xDB, 0x60, 0xBD, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x3, 
        0x2, 0x8]);
    writeArray(mapCode[1684][1], 0x1D98, [0xE0, 0xB5, 0x6, 0x0, 0x8, 0x38, 0x7, 0x0, 0x2, 0xF0, 0x64, 0xF9, 0x0, 0x20, 0x2, 0xF0, 0x2D, 0xFA, 0xA0, 0x20, 
        0x0, 0x1, 0x21, 0x30, 0x2, 0xF0, 0x8, 0xF9, 0x0, 0x28, 0x9, 0xD1, 0x2B, 0x20, 0x0, 0x2, 0x5E, 0x30, 0x2, 0xF0, 0xB5, 0xF9, 0x30, 0x0, 0x0, 0x21, 
        0x2, 0xF0, 0xBD, 0xF9, 0x1F, 0xE0, 0x11, 0x48, 0x39, 0x0, 0x49, 0x0, 0x40, 0x5A, 0x5, 0x0, 0x0, 0xF0, 0x23, 0xF8, 0x1, 0x28, 0x6, 0xD0, 0x53, 
        0x20, 0x0, 0xF0, 0x22, 0xF8, 0x0, 0xF0, 0x18, 0xF8, 0x0, 0x28, 0xA, 0xDB, 0x30, 0x0, 0x0, 0x21, 0x0, 0x22, 0x0, 0xF0, 0x1D, 0xF8, 0xD0, 0x20, 0x0, 
        0x1, 0xC0, 0x19, 0x2, 0xF0, 0xE6, 0xF8, 0x4, 0xE0, 0xE2, 0x20, 0x0, 0x1, 0x0, 0x21, 0x2, 0xF0, 0x14, 0xF9, 0x2, 0xF0, 0x32, 0xF9, 0xE0, 0xBD, 0x0, 
        0x0, 0x80, 0x1, 0xFA, 0x8, 0x0, 0x4C, 0x20, 0x47, 0x7, 0x2, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0x1, 0x60, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0xB1, 
        0xC, 0x1C, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xF9, 0x80, 0xC, 0x8]);

    textutil.writeLine(text, 0x2B5E, "The item is held in place\x03by a strange force.\x01Maybe igniting Jupiter Lighthouse\x03will make something happen?\x02");

    // Update World Map map code to remove the entrance block on Atteka Inlet
    mapCode[1611][0] = true;
    writeArray(mapCode[1611][1], 0x996, [0x9, 0xE1]);
}

function moveIconTable(rom) {
    let readAddr = 0x54A14;
    let offset = 0;

    let word = read32b(rom, readAddr);
    while (word != 0xFFFFFFFF) {
        write32b(rom, tableAddr + offset, word);
        offset += 4;
        word = read32b(rom, readAddr + offset);
    }
}

module.exports = {apply};