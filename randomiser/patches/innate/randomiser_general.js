/**
 * This patch applies numerous changes to the core game to allow
 * the randomiser to do what it should do.
 * Ported over from the UPS files of the original GS2 randomiser.
 */

const { writeArray, write16b } = require('../../../util/binary.js');

function apply(rom) {
    // Remove function for displaying area names
    writeArray(rom, 0x3F86C, [0x70, 0x47]);

    // Remove function for pre-allocating Djinn on Isaac's party
    writeArray(rom, 0xAE868, [0x70, 0x47]);

    // Change the Taopo Swamp exterior area ID to match the interior
    rom[0xF1C22] = 0x2A;
    rom[0xF1C2A] = 0x2A;

    // ??? (This is in the function for sorting Djinn)
    rom[0x101B12] = 0x0;
    rom[0x101B15] = 0xDA;

    // Prepare Djinni mapping table
    for (let elem = 0x0; elem < 0x4; ++elem) {
        for (let id = 0x0; id < 0x12; ++id) {
            rom[0xFA0000 + elem * 0x24 + id * 0x2] = id;
            rom[0xFA0000 + elem * 0x24 + id * 0x2 + 1] = elem;
        }
    }

    // Prepare Psynergy pseudo-item mapping table
    writeArray(rom, 0xFA00A0, [0xC6, 0x0, 0xC7, 0x0, 0xD1, 0x0, 0xD2, 0x0, 0xD7, 0x0, 0xDE, 0x0, 0xF2, 0x0, 0x46, 0x1, 0xC4, 0x1, 0xC5, 0x1, 0xC6, 0x1, 
        0xC7, 0x1, 0xC9, 0x1, 0xCA, 0x1, 0xCC, 0x1, 0x90, 0xE, 0x8A, 0xE, 0x8B, 0xE, 0x9A, 0xE, 0x16, 0xF, 0xB9, 0x1, 0x41, 0x0, 0x8D, 0xE, 0x4E, 0xE, 
        0xC, 0xE, 0xCE, 0x0, 0xCB, 0x0, 0xC8, 0x0, 0xCF, 0x0, 0xC9, 0x0, 0xCA, 0x0]);

    // Prepare starting inventory mapping table
    writeArray(rom, 0xFA00E0, [0x4, 0x0, 0x8C, 0xE, 0x4, 0x0, 0x95, 0xE, 0x4, 0x0, 0x96, 0xE, 0x4, 0x0, 0x41, 0x0, 0x4, 0x0, 0xC, 0xE, 0x6, 0x0, 0x4E, 
        0xE, 0x6, 0x0, 0x8D, 0xE, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0xC9, 0x0, 0x7, 0x0, 0xCA, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8C, 0xE, 0x0, 0x0, 0x95, 
        0xE, 0x1, 0x0, 0x8C, 0xE, 0x0, 0x0, 0xCF, 0x0, 0x1, 0x0, 0xC8, 0x0, 0x2, 0x0, 0xCB, 0x0, 0x3, 0x0, 0xCE, 0x0]);

    // ??? (Enumerates party members, but why?)
    writeArray(rom, 0xFA3000, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]);

    // Map code injector
    writeArray(rom, 0xC9C12, [0x1, 0x49, 0x8, 0x47, 0x0, 0x0, 0x1, 0x0, 0x0, 0x9]);
    writeArray(rom, 0x1000000, [0xC, 0x4B, 0xF0, 0x21, 0x49, 0x0, 0x5B, 0x18, 0x0, 0x21, 0x5B, 0x5E, 0xA, 0x4A, 0xDB, 0x0, 0x98, 0x5E, 0xA, 0x49, 0x0, 
        0xF0, 0x16, 0xF8, 0x3F, 0xB4, 0x0, 0xF0, 0x15, 0xF8, 0x0, 0xF0, 0x15, 0xF8, 0x0, 0xF0, 0x15, 0xF8, 0x0, 0xF0, 0x15, 0xF8, 0x0, 0xF0, 0x15, 0xF8, 
        0x3F, 0xBC, 0x3, 0x48, 0x0, 0x47, 0x40, 0x2, 0x0, 0x2, 0xA8, 0x17, 0xF, 0x8, 0x0, 0x80, 0x0, 0x2, 0x2B, 0x9C, 0xC, 0x8, 0x5, 0x4B, 0x18, 0x47, 
        0x5, 0x4C, 0x20, 0x47, 0x5, 0x4C, 0x20, 0x47, 0x5, 0x4C, 0x20, 0x47, 0x5, 0x4C, 0x20, 0x47, 0x5, 0x4C, 0x20, 0x47, 0x6D, 0x33, 0x1, 0x8, 0x1, 0x1, 
        0x0, 0x9, 0x1, 0x70, 0x0, 0x9, 0x1, 0x73, 0x0, 0x9, 0x1, 0x6E, 0x0, 0x9, 0x1, 0x18, 0x0, 0x9]);
    writeArray(rom, 0x1000100, [0x4, 0x4C, 0x24, 0x88, 0xC, 0x20, 0xA0, 0x42, 0x2D, 0xD0, 0xBC, 0x20, 0xA0, 0x42, 0x3, 0xD0, 0x70, 0x47, 0x0, 0x0, 0x20, 
        0x4, 0x0, 0x2, 0x1, 0x48, 0x2, 0x49, 0x1, 0x60, 0x70, 0x47, 0x78, 0xB4, 0x0, 0x2, 0x29, 0x1, 0x0, 0x9, 0x1, 0xB4, 0x8, 0x1C, 0x12, 0x4C, 0x13, 
        0x49, 0x8, 0x47, 0x1, 0x1C, 0x1, 0xBC, 0xE0, 0xB5, 0xD, 0x1C, 0x6, 0x1C, 0x17, 0x1C, 0x28, 0xA, 0x8, 0x28, 0x2, 0xDC, 0x28, 0x1C, 0xE, 0x4C, 0x20, 
        0x47, 0x28, 0x1C, 0xD, 0x4C, 0x20, 0x47, 0xD, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1001800, [0x0, 0xB5, 0x8, 0x4D, 0x2D, 0x88, 0x2, 0x2D, 0x2, 0xD1, 0x0, 0xF0, 0x2B, 0xF8, 0x7, 0xE0, 0x0, 0xF0, 0xA8, 0xF8, 0x0, 
        0xF0, 0x70, 0xF9, 0x0, 0xF0, 0xFA, 0xF9, 0x0, 0xF0, 0xBC, 0xFA, 0x0, 0xBD, 0x0, 0x0, 0x20, 0x4, 0x0, 0x2]);

    // ???
    writeArray(rom, 0xD29E8, [0x0, 0x48, 0x0, 0x47, 0x55, 0x1, 0x0, 0x9]);
    writeArray(rom, 0x1000154, [0x28, 0x1C, 0xD, 0x4C, 0x0, 0xF0, 0x4B, 0xF8, 0x0, 0x21, 0x0, 0xF0, 0x52, 0xF8, 0xB, 0x4B, 0x18, 0x47, 0xB, 0x48, 0xB, 
        0x49, 0xC, 0xC9, 0xC, 0xC0, 0xB, 0x48, 0xB, 0x49, 0xC, 0xC9, 0xC, 0xC0, 0x70, 0x47, 0x33, 0x1, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0x77, 0x29, 0xD, 
        0x8, 0xD7, 0x29, 0xD, 0x8, 0x41, 0xEE, 0xA, 0x8, 0x63, 0x1, 0x0, 0x9, 0xF1, 0x29, 0xD, 0x8, 0x74, 0x87, 0x0, 0x2, 0xA4, 0x1, 0x0, 0x9, 0xAC, 0x87, 
        0x0, 0x2, 0xAC, 0x1, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0xB5, 0x1, 0x0, 0x9, 0x0, 0x4C, 0x20, 0x47, 0xD1, 0x1, 0x0, 0x9, 0x28, 0x1C, 0x0, 0xF0, 0x4D, 
        0xF8, 0x5, 0x1C, 0x1C, 0x4C, 0x0, 0xF0, 0x18, 0xF8, 0x53, 0x20, 0x0, 0xF0, 0x13, 0xF8, 0x0, 0xF0, 0x1D, 0xF8, 0x19, 0x48, 0x0, 0x47, 0x28, 0x1C, 
        0x0, 0xF0, 0x3F, 0xF8, 0x5, 0x1C, 0x17, 0x4C, 0x0, 0xF0, 0xA, 0xF8, 0x53, 0x20, 0x0, 0xF0, 0x5, 0xF8, 0x28, 0x1C, 0x15, 0x49, 0x8, 0x47, 0x12, 0x48,
        0x0, 0x47, 0x14, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x10001F2, [0x10, 0xB5, 0x0, 0xF0, 0x5, 0xF8, 0x1, 0x28, 0x0, 0xD0, 0x10, 0xBD, 0x11, 0xBC, 0x0, 0x47, 0x10, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1000206, [0x0, 0xB5, 0x28, 0x1C, 0x2, 0x21, 0x0, 0xF0, 0xA, 0xF8, 0x1, 0x21, 0xE1, 0x20, 0x0, 0x1, 0x1, 0x30, 0x0, 0xF0, 0x6, 0xF8, 
        0x28, 0x1C, 0x0, 0xF0, 0x5, 0xF8, 0x0, 0xBD, 0x8, 0x4C, 0x20, 0x47, 0x8, 0x4C, 0x20, 0x47, 0x8, 0x4C, 0x20, 0x47, 0xCD, 0x1, 0x0, 0x9, 0x91, 0x87, 
        0x0, 0x2, 0xEB, 0x1, 0x0, 0x9, 0xB5, 0x87, 0x0, 0x2, 0xB1, 0xC, 0x1C, 0x8, 0x1, 0x60, 0x0, 0x9, 0xD1, 0xCC, 0x3, 0x8, 0xAD, 0xA7, 0x3, 0x8, 0x29, 
        0xD0, 0xA, 0x8]);
    writeArray(rom, 0x1000254, [0x1, 0x4C, 0x2, 0x49, 0x8, 0x47, 0x70, 0x47, 0x5B, 0x2, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9]);

    // Fixes the location visited flags to the world map entrance (for the old room randomiser)
    // Delete maybe? There's no need for this, and even so can be achieved by altering the world map location table
    writeArray(rom, 0xC96B4, [0x0, 0x49, 0x8, 0x47, 0x1, 0x3, 0x0, 0x9]);
    writeArray(rom, 0x1000300, [0xD, 0xB4, 0x41, 0x46, 0x9, 0x4, 0xC9, 0x19, 0x8, 0x4A, 0x11, 0x60, 0x8, 0x48, 0xC, 0xC8, 0x0, 0x2A, 0x4, 0xD0, 0x91, 
        0x42, 0xFA, 0xD1, 0x18, 0x1C, 0x0, 0xF0, 0x2B, 0xF9, 0xD, 0xBC, 0xBA, 0x21, 0x89, 0x0, 0xFF, 0x31, 0x3, 0x4E, 0x30, 0x47, 0x0, 0x0, 0x54, 0x29, 
        0x0, 0x2, 0x38, 0x3, 0x0, 0x9, 0xBD, 0x96, 0xC, 0x8, 0x2, 0x0, 0x3, 0x0, 0x82, 0x1, 0x0, 0x0, 0x2, 0x0, 0x4, 0x0, 0x84, 0x1, 0x0, 0x0, 0x2, 0x0, 
        0x5, 0x0, 0xDA, 0x1, 0x0, 0x0, 0x2, 0x0, 0x6, 0x0, 0x86, 0x1, 0x0, 0x0, 0x2, 0x0, 0x9, 0x0, 0x89, 0x1, 0x0, 0x0, 0x2, 0x0, 0xE, 0x0, 0x8E, 0x1, 
        0x0, 0x0, 0x2, 0x0, 0xF, 0x0, 0x8F, 0x1, 0x0, 0x0, 0x2, 0x0, 0x10, 0x0, 0x90, 0x1, 0x0, 0x0, 0x2, 0x0, 0x11, 0x0, 0x93, 0x1, 0x0, 0x0, 0x2, 0x0, 
        0x14, 0x0, 0x94, 0x1, 0x0, 0x0, 0x2, 0x0, 0x16, 0x0, 0x96, 0x1, 0x0, 0x0, 0x2, 0x0, 0x17, 0x0, 0x97, 0x1, 0x0, 0x0, 0x2, 0x0, 0x19, 0x0, 0x99, 
        0x1, 0x0, 0x0, 0x2, 0x0, 0x1B, 0x0, 0x9B, 0x1, 0x0, 0x0, 0x2, 0x0, 0x1C, 0x0, 0x9C, 0x1, 0x0, 0x0, 0x2, 0x0, 0x1D, 0x0, 0x9D, 0x1, 0x0, 0x0, 0x2, 
        0x0, 0x1E, 0x0, 0x9E, 0x1, 0x0, 0x0, 0x2, 0x0, 0x1F, 0x0, 0x9F, 0x1, 0x0, 0x0, 0x2, 0x0, 0x20, 0x0, 0xA0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x22, 0x0, 
        0xA1, 0x1, 0x0, 0x0, 0x2, 0x0, 0x23, 0x0, 0xA3, 0x1, 0x0, 0x0, 0x2, 0x0, 0x24, 0x0, 0xA4, 0x1, 0x0, 0x0, 0x2, 0x0, 0x25, 0x0, 0xA5, 0x1, 0x0, 
        0x0, 0x2, 0x0, 0x26, 0x0, 0xA6, 0x1, 0x0, 0x0, 0x2, 0x0, 0x27, 0x0, 0xA7, 0x1, 0x0, 0x0, 0x2, 0x0, 0x28, 0x0, 0xA8, 0x1, 0x0, 0x0, 0x2, 0x0, 
        0x29, 0x0, 0xA9, 0x1, 0x0, 0x0, 0x2, 0x0, 0x2E, 0x0, 0xAE, 0x1, 0x0, 0x0, 0x2, 0x0, 0x31, 0x0, 0xB1, 0x1, 0x0, 0x0, 0x2, 0x0, 0x34, 0x0, 0xB5, 
        0x1, 0x0, 0x0, 0x2, 0x0, 0x36, 0x0, 0xB6, 0x1, 0x0, 0x0, 0x2, 0x0, 0x37, 0x0, 0xB7, 0x1, 0x0, 0x0, 0x2, 0x0, 0x2F, 0x0, 0xAF, 0x1, 0x0, 0x0, 0x2, 
        0x0, 0x30, 0x0, 0xB0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x32, 0x0, 0xB2, 0x1, 0x0, 0x0, 0x2, 0x0, 0x33, 0x0, 0xB3, 0x1, 0x0, 0x0, 0x2, 0x0, 0x3A, 0x0, 
        0xBA, 0x1, 0x0, 0x0, 0x2, 0x0, 0x3B, 0x0, 0xBB, 0x1, 0x0, 0x0, 0x2, 0x0, 0x3E, 0x0, 0xBE, 0x1, 0x0, 0x0, 0x2, 0x0, 0x52, 0x0, 0xD2, 0x1, 0x0, 
        0x0, 0x2, 0x0, 0x53, 0x0, 0xD3, 0x1, 0x0, 0x0, 0x2, 0x0, 0x54, 0x0, 0xD4, 0x1, 0x0, 0x0, 0x2, 0x0, 0x57, 0x0, 0xD7, 0x1, 0x0, 0x0, 0x2, 0x0, 0x58, 
        0x0, 0xD8, 0x1]);

    // ??? (More exit-related stuff)
    writeArray(rom, 0xC9752, [0x1, 0x4C, 0x20, 0x47, 0x0, 0x0, 0xA1, 0x4, 0x0, 0x9]);
    writeArray(rom, 0xFA0150, [0xFF, 0xFF, 0xFF, 0xFF]);
    writeArray(rom, 0x10004A0, [0xD, 0x1C, 0x48, 0x46, 0x0, 0x4, 0x40, 0x18, 0xD, 0x1C, 0x0, 0xF0, 0x69, 0xF8, 0x1, 0x2B, 0x2D, 0xD0, 0x0, 0xF0, 0x8F, 
        0xF8, 0x1, 0x2B, 0x29, 0xD0, 0x0, 0xF0, 0xB3, 0xF8, 0x24, 0x49, 0x0, 0x22, 0x1, 0x3A, 0x28, 0xC9, 0x93, 0x42, 0x1A, 0xD0, 0x83, 0x42, 0xFA, 0xD1, 
        0x90, 0x20, 0x40, 0x0, 0x0, 0xF0, 0x4D, 0xF8, 0x90, 0x20, 0x40, 0x0, 0x1, 0x30, 0x0, 0xF0, 0x48, 0xF8, 0x90, 0x20, 0x40, 0x0, 0x2, 0x30, 0x0, 
        0xF0, 0x43, 0xF8, 0x28, 0xF, 0xF, 0x28, 0x4, 0xD0, 0x90, 0x23, 0x5B, 0x0, 0xC0, 0x18, 0x0, 0xF0, 0x3D, 0xF8, 0x2D, 0x1, 0x2D, 0x9, 0x28, 0x1C, 
        0x0, 0xF0, 0xDC, 0xF8, 0x13, 0x4C, 0xA0, 0x42, 0x1, 0xD1, 0x13, 0x4C, 0x20, 0x68, 0x0, 0xF0, 0x95, 0xF8, 0x12, 0x4C, 0x20, 0x60, 0x12, 0x49, 0x88, 
        0x42, 0x12, 0xD0, 0x11, 0x49, 0x88, 0x42, 0xF, 0xD0, 0x11, 0x49, 0x88, 0x42, 0xC, 0xD0, 0x10, 0x49, 0x9, 0x68, 0x1, 0x22, 0x12, 0x2, 0xFF, 0x32, 
        0xA, 0x40, 0x2, 0x2A, 0x6, 0xD1, 0x9, 0xC, 0x48, 0x29, 0x3, 0xD0, 0x4E, 0x29, 0x1, 0xD0, 0x5, 0x49, 0x8, 0x60, 0x68, 0xBC, 0x98, 0x46, 0xA9, 0x46, 
        0xB2, 0x46, 0xE0, 0xBD, 0x50, 0x1, 0xFA, 0x8, 0xFB, 0x0, 0x5, 0x0, 0x50, 0x29, 0x0, 0x2, 0x20, 0x4, 0x0, 0x2, 0x62, 0x0, 0x1, 0x0, 0xCA, 0x0, 0x4, 
        0x0, 0x28, 0x0, 0x1, 0x0, 0x54, 0x29, 0x0, 0x2, 0x1, 0x4C, 0x20, 0x47, 0x1, 0x4C, 0x20, 0x47, 0x19, 0x6D, 0x1, 0x8, 0xFD, 0x6C, 0x1, 0x8]);
    writeArray(rom, 0x1000580, [0x1, 0xB5, 0xB, 0x49, 0x9, 0x68, 0xB, 0x4A, 0x0, 0x23, 0x1, 0x3B, 0x30, 0xCA, 0x9C, 0x42, 0x7, 0xD0, 0x8C, 0x42, 0x0, 0xD0, 
        0xF9, 0xE7, 0x28, 0x1C, 0x0, 0xF0, 0x6, 0xF8, 0x0, 0x28, 0x1, 0xD0, 0x0, 0x23, 0x1, 0xBD, 0x1, 0x23, 0x1, 0xBD, 0x3, 0x4C, 0x20, 0x47, 0x0, 0x0, 
        0x54, 0x29, 0x0, 0x2, 0xBC, 0x5, 0x0, 0x9, 0xE5, 0x6C, 0x1, 0x8, 0x54, 0x0, 0xA, 0x0, 0x7A, 0x8, 0x0, 0x0, 0x54, 0x0, 0xB, 0x0, 0x7A, 0x8, 0x0, 
        0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);
    writeArray(rom, 0x10005D4, [0x16, 0xB4, 0x8, 0x4C, 0x24, 0x68, 0x0, 0x21, 0x1, 0x39, 0x7, 0x4A, 0x8, 0xCA, 0x8B, 0x42, 0x4, 0xD0, 0xA3, 0x42, 0x0, 
        0xD0, 0xF9, 0xE7, 0x1, 0x23, 0x0, 0xE0, 0x0, 0x23, 0x16, 0xBC, 0x70, 0x47, 0x0, 0x0, 0x20, 0x4, 0x0, 0x2, 0x0, 0x6, 0x0, 0x9, 0xB3, 0x0, 0x6, 0x0, 
        0xB1, 0x0, 0x14, 0x0, 0xC0, 0x0, 0x14, 0x0, 0x72, 0x0, 0xC, 0x0, 0x72, 0x0, 0xD, 0x0, 0x78, 0x0, 0x5, 0x0, 0x25, 0x1, 0x9, 0x0, 0x19, 0x1, 0x14, 
        0x0, 0xFF, 0xFF, 0xFF, 0xFF]);
    writeArray(rom, 0x1000624, [0x4, 0x4D, 0xE, 0xCD, 0x0, 0x29, 0x3, 0xDB, 0x90, 0x42, 0x0, 0xD0, 0xF9, 0xE7, 0x18, 0x1C, 0x70, 0x47, 0x0, 0x0, 0x64, 0x6, 
        0x0, 0x9]);
    writeArray(rom, 0x100063C, [0x0, 0xB5, 0x6, 0x1C, 0x7, 0x4D, 0x7, 0xCD, 0x0, 0x28, 0x9, 0xDB, 0xB2, 0x42, 0x0, 0xD0, 0xF9, 0xE7, 0xD, 0x1C, 0x0, 0xF0, 
        0x32, 0xF8, 0x0, 0x28, 0x1, 0xD0, 0x28, 0x1C, 0x0, 0xBD, 0x30, 0x1C, 0x0, 0xBD, 0x64, 0x6, 0x0, 0x9, 0x3F, 0x9, 0x0, 0x0, 0x29, 0x0, 0xB, 0x0, 
        0x29, 0x0, 0x1, 0x0, 0x3F, 0x9, 0x0, 0x0, 0x29, 0x0, 0xC, 0x0, 0x29, 0x0, 0x2, 0x0, 0x3F, 0x9, 0x0, 0x0, 0x29, 0x0, 0xD, 0x0, 0x29, 0x0, 0x3, 0x0, 
        0x3F, 0x9, 0x0, 0x0, 0x29, 0x0, 0xE, 0x0, 0x29, 0x0, 0x4, 0x0, 0x23, 0xA, 0x0, 0x0, 0x9, 0x1, 0x2, 0x0, 0x8, 0x1, 0x2, 0x0, 0x23, 0xA, 0x0, 0x0, 
        0x9, 0x1, 0x1, 0x0, 0x8, 0x1, 0x1, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x10006BC, [0x1, 0xB5, 0x7, 0x4C, 0x24, 0x68, 0x7, 0x4E, 0x6, 0xCE, 0x0, 0x29, 0x4, 0xD0, 0x81, 0x42, 0xFA, 0xD1, 0x10, 0x1C, 0xFF, 
        0xF7, 0x50, 0xFF, 0x1, 0xBD, 0x0, 0x0, 0xE5, 0x6C, 0x1, 0x8, 0x20, 0x4, 0x0, 0x2, 0xE4, 0x6, 0x0, 0x9, 0xE, 0x0, 0x4, 0x0, 0x1, 0x3, 0x0, 0x0, 
        0x52, 0x0, 0x2, 0x0, 0x58, 0x8, 0x0, 0x0, 0x57, 0x0, 0x2, 0x0, 0x9B, 0x8, 0x0, 0x0, 0x5D, 0x0, 0x2, 0x0, 0x6, 0x3, 0x0, 0x0, 0x90, 0x0, 0x3, 0x0, 
        0xE0, 0x8, 0x0, 0x0, 0x90, 0x0, 0x4, 0x0, 0xE3, 0x8, 0x0, 0x0, 0x90, 0x0, 0x5, 0x0, 0xE4, 0x8, 0x0, 0x0, 0x96, 0x0, 0x5, 0x0, 0x8, 0x3, 0x0, 0x0, 
        0xBD, 0x0, 0x3, 0x0, 0x90, 0x9, 0x0, 0x0, 0xBD, 0x0, 0x4, 0x0, 0x91, 0x9, 0x0, 0x0, 0xBD, 0x0, 0x2, 0x0, 0x93, 0x9, 0x0, 0x0, 0xBD, 0x0, 0xD, 0x0, 
        0xD2, 0x9, 0x0, 0x0, 0xBD, 0x0, 0xE, 0x0, 0xD3, 0x9, 0x0, 0x0, 0xBD, 0x0, 0xF, 0x0, 0xD4, 0x9, 0x0, 0x0, 0xBD, 0x0, 0x11, 0x0, 0xD6, 0x9, 0x0, 0x0, 
        0xBD, 0x0, 0x12, 0x0, 0xD7, 0x9, 0x0, 0x0, 0xBD, 0x0, 0x13, 0x0, 0xD8, 0x9, 0x0, 0x0, 0xBE, 0x0, 0xB, 0x0, 0x9E, 0x9, 0x0, 0x0, 0xC0, 0x0, 0x6, 
        0x0, 0xA3, 0x9, 0x0, 0x0, 0xC0, 0x0, 0xB, 0x0, 0xA7, 0x9, 0x0, 0x0, 0xC0, 0x0, 0x5, 0x0, 0xA2, 0x9, 0x0, 0x0, 0xBD, 0x0, 0x21, 0x0, 0x9A, 0x9, 0x0, 
        0x0, 0xBD, 0x0, 0x1D, 0x0, 0x96, 0x9, 0x0, 0x0, 0x66, 0x0, 0x3, 0x0, 0x85, 0x8, 0x0, 0x0, 0x6B, 0x0, 0x6, 0x0, 0x82, 0x8, 0x0, 0x0, 0x29, 0x0, 0x6, 
        0x0, 0x82, 0x9, 0x0, 0x0, 0x44, 0x0, 0x5, 0x0, 0x8D, 0x8, 0x0, 0x0, 0xE8, 0x0, 0x7, 0x0, 0x3, 0x3, 0x0, 0x0, 0x2F, 0x0, 0x1, 0x0, 0xCB, 0x8, 0x0, 
        0x0, 0x2F, 0x0, 0x4, 0x0, 0xCB, 0x8]);

    // Add custom function for handling party initialisation
    writeArray(rom, 0xADEF6, [0x1, 0x48, 0x0, 0x47, 0x0, 0x0, 0x1, 0x8, 0x0, 0x9]);
    writeArray(rom, 0x1000800, [0x80, 0xB4, 0x0, 0xF0, 0x1C, 0xF8, 0x5, 0x20, 0x0, 0xF0, 0x1C, 0xF8, 0x6, 0x20, 0x0, 0xF0, 0x19, 0xF8, 0x41, 0x20, 
        0x0, 0xF0, 0x18, 0xF8, 0x15, 0x4D, 0x0, 0xF0, 0x6, 0xF8, 0x15, 0x4D, 0x0, 0xF0, 0x3, 0xF8, 0x80, 0xBC, 0x14, 0x4A, 0x10, 0x47, 0x0, 0xB5, 
        0x28, 0x88, 0x69, 0x88, 0x0, 0x29, 0x3, 0xD0, 0x0, 0xF0, 0x97, 0xF8, 0x4, 0x35, 0xF7, 0xE7, 0x0, 0xBD, 0x0, 0xB5, 0xE, 0x4C, 0x20, 0x47, 0xE, 
        0x4C, 0x20, 0x47, 0xE, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1000870, [0xE0, 0x0, 0xFA, 0x8, 0x30, 0x1, 0xFA, 0x8, 0x4B, 0xDF, 0xA, 0x8, 0xFB, 0xE0, 0xA, 0x8, 0xD9, 0xFD, 0xA, 0x8, 0x99, 
        0xF2, 0xA, 0x8]);

    // Add custom function for setting up Piers
    writeArray(rom, 0xAD22C, [0x4D, 0x8, 0x0, 0x9]);
    writeArray(rom, 0x100084C, [0xE0, 0xB5, 0x7, 0x27, 0x1, 0x20, 0x9, 0x21, 0x0, 0xF0, 0x66, 0xF8, 0x1, 0x20, 0xA, 0x21, 0x0, 0xF0, 0x62, 0xF8, 0x9, 
        0x4D, 0xFF, 0xF7, 0xE2, 0xFF, 0x7, 0x20, 0x0, 0xF0, 0x7F, 0xF8, 0xE0, 0xBD]);
    writeArray(rom, 0x1000888, [0x0, 0x1, 0xFA, 0x8]);

    // Add custom function for setting up Isaac's party
    writeArray(rom, 0xAD244, [0x8D, 0x8, 0x0, 0x9]);
    writeArray(rom, 0x100088C, [0xE0, 0xB5, 0x0, 0x20, 0x0, 0x27, 0x0, 0xF0, 0x2D, 0xF8, 0x2, 0x20, 0x1, 0x27, 0x0, 0xF0, 0x29, 0xF8, 0x3, 0x20, 0x2, 
        0x27, 0x0, 0xF0, 0x25, 0xF8, 0x1, 0x20, 0x3, 0x27, 0x0, 0xF0, 0x21, 0xF8, 0xF, 0x4D, 0xFF, 0xF7, 0xBB, 0xFF, 0x0, 0x20, 0x0, 0xF0, 0x58, 0xF8, 
        0x1, 0x20, 0x0, 0xF0, 0x55, 0xF8, 0x2, 0x20, 0x0, 0xF0, 0x52, 0xF8, 0x3, 0x20, 0x0, 0xF0, 0x4F, 0xF8, 0x0, 0x20, 0xFF, 0xF7, 0xB9, 0xFF, 0x1, 
        0x20, 0xFF, 0xF7, 0xB6, 0xFF, 0x2, 0x20, 0xFF, 0xF7, 0xB3, 0xFF, 0x3, 0x20, 0xFF, 0xF7, 0xB0, 0xFF, 0x22, 0x20, 0x0, 0xF0, 0x38, 0xF8, 0xE0, 
        0xBD, 0xC, 0x1, 0xFA, 0x8, 0x20, 0xB5, 0x5, 0x0, 0x0, 0x21, 0x0, 0xF0, 0x15, 0xF8, 0x28, 0x0, 0x1, 0x21, 0x0, 0xF0, 0x11, 0xF8, 0x28, 0x0, 0x2, 
        0x21, 0x0, 0xF0, 0xD, 0xF8, 0x28, 0x0, 0x3, 0x21, 0x0, 0xF0, 0x9, 0xF8, 0x28, 0x0, 0x4, 0x21, 0x0, 0xF0, 0x5, 0xF8, 0x28, 0x0, 0x5, 0x21, 0x0, 
        0xF0, 0x1, 0xF8, 0x20, 0xBD, 0x60, 0xB5, 0x12, 0x4D, 0x24, 0x22, 0x50, 0x43, 0x2, 0x22, 0x51, 0x43, 0x40, 0x18, 0x2E, 0x5C, 0x1, 0x30, 0x2D, 
        0x5C, 0x14, 0x20, 0x68, 0x43, 0x80, 0x19, 0x30, 0x30, 0x0, 0xF0, 0xB, 0xF8, 0x38, 0x1C, 0x29, 0x1C, 0x32, 0x1C, 0x0, 0xF0, 0x8, 0xF8, 0x38, 0x1C, 
        0x29, 0x1C, 0x32, 0x1C, 0x0, 0xF0, 0x5, 0xF8, 0x60, 0xBD, 0x6, 0x4C, 0x20, 0x47, 0x6, 0x4C, 0x20, 0x47, 0x6, 0x4C, 0x20, 0x47, 0x6, 0x4C, 0x20, 
        0x47, 0x6, 0x4C, 0x20, 0x47, 0x0, 0x0, 0x0, 0x0, 0xFA, 0x8, 0xFD, 0x6C, 0x1, 0x8, 0x79, 0xB, 0xB, 0x8, 0x9D, 0xC, 0xB, 0x8, 0x39, 0x50, 0x0, 0x9, 
        0xF9, 0xD3, 0xA, 0x8]);

    // ??? (Treasure pickup related)
    writeArray(rom, 0xCD0E0, [0x0, 0x4C, 0x20, 0x47, 0x1, 0x10, 0x0, 0x9]);
    writeArray(rom, 0xCD31A, [0x1, 0x48, 0x0, 0x47, 0x0, 0x0, 0xB, 0x10, 0x0, 0x9]);
    writeArray(rom, 0x1001000, [0x38, 0x1C, 0x0, 0xF0, 0x19, 0xF8, 0x10, 0x48, 0x0, 0x47, 0x38, 0x1C, 0x0, 0xF0, 0x14, 0xF8, 0x0, 0x28, 0x0, 0xD0, 0xB, 
        0xE0, 0x30, 0x1C, 0x0, 0xF0, 0x5, 0xF8, 0x53, 0x20, 0x0, 0xF0, 0x4, 0xF8, 0xA, 0x4C, 0x20, 0x47, 0xA, 0x4A, 0x10, 0x47, 0xA, 0x4C, 0x20, 0x47, 0x48,
        0x46, 0x0, 0xF0, 0x8, 0xF8, 0x8, 0x48, 0x0, 0x47, 0x0, 0xB5, 0x0, 0xF0, 0x1, 0xF8, 0x0, 0xBD, 0x6, 0x4C, 0x20, 0x47, 0x6, 0x4C, 0x20, 0x47, 0xED, 
        0xD0, 0xC, 0x8, 0x27, 0xD3, 0xC, 0x8, 0x51, 0xF3, 0xC, 0x8, 0xB1, 0xC, 0x1C, 0x8, 0x65, 0xD3, 0xC, 0x8, 0x1, 0x60, 0x0, 0x9, 0xFD, 0x6C, 0x1, 0x8]);

    // Auxiliary functions for fetching Djinni mappings
    writeArray(rom, 0x1001828, [0xD, 0x49, 0x2, 0x23, 0x5A, 0x43, 0x89, 0x18, 0x4B, 0x78, 0xC, 0x78, 0xF7, 0x46, 0x0, 0xB5, 0xFF, 0xF7, 0xF6, 0xFF, 0xF3, 
        0x21, 0xC9, 0x18, 0x14, 0x22, 0x5A, 0x43, 0x12, 0x19, 0x30, 0x32, 0x0, 0xBD, 0x0, 0xB5, 0xFF, 0xF7, 0xEC, 0xFF, 0xF3, 0x21, 0xC9, 0x18, 0x14, 0x22, 
        0x5A, 0x43, 0x13, 0x19, 0x30, 0x22, 0xD2, 0x18, 0x0, 0xBD, 0x0, 0x0, 0xFA, 0x8]);

    // Add custom handler for adding items
    writeArray(rom, 0xAD02C, [0x1, 0x20, 0x0, 0x9]);
    writeArray(rom, 0x1002000, [0x0, 0xB5, 0x1, 0xB4, 0x0, 0x4, 0x0, 0xE, 0x8, 0x28, 0x1, 0xBC, 0x2, 0xDC, 0x0, 0xF0, 0xC, 0xF8, 0x0, 0xBD, 0x1, 0xB0, 
        0xB8, 0x42, 0x5, 0xD0, 0xB0, 0x42, 0xFF, 0xD0, 0xFF, 0xF7, 0xB, 0xF8, 0x1C, 0x4C, 0x20, 0x47, 0x1C, 0x4C, 0x20, 0x47, 0x1C, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1002094, [0xC1, 0x27, 0xD, 0x8, 0xCF, 0xD2, 0xC, 0x8, 0xF9, 0xED, 0xA, 0x8]);

    // Custom function for displaying items and replacing static item sprites
    writeArray(rom, 0x10020A0, [0x3E, 0xB4, 0xC, 0x4C, 0xC, 0x4A, 0x12, 0x88, 0x12, 0x4, 0x12, 0x18, 0x23, 0x68, 0x0, 0x2B, 0x3, 0xD0, 0x93, 0x42, 0xC, 
        0xD0, 0x4, 0x34, 0xF8, 0xE7, 0x0, 0x21, 0x7, 0x4C, 0x63, 0x5A, 0x0, 0x2B, 0x1B, 0xD0, 0x83, 0x42, 0x1, 0xD0, 0x2, 0x31, 0xF8, 0xE7, 0x4, 0x4C, 
        0x60, 0x5A, 0x3E, 0xBC, 0x20, 0x47, 0xE4, 0x20, 0x0, 0x9, 0x20, 0x4, 0x0, 0x2, 0x0, 0x40, 0x0, 0x9, 0xA0, 0x0, 0xFA, 0x8, 0xF2, 0x0, 0x2B, 0x0, 
        0xC5, 0x1, 0x85, 0x0, 0xC6, 0x1, 0x83, 0x0, 0xB9, 0x1, 0xBC, 0x0, 0x41, 0x0, 0xF2, 0x0, 0xCC, 0x1, 0xA, 0x1, 0x1, 0xA, 0xD, 0x29, 0xE6, 0xD1, 
        0xF, 0x21, 0x1, 0x40, 0x5, 0x29, 0x0, 0xDB, 0x1, 0x39, 0x49, 0x0, 0x1, 0x4C, 0x60, 0x5A, 0xDD, 0xE7, 0x80, 0x1, 0xFA, 0x8]);
    writeArray(rom, 0x1004000, [0xC6, 0x0, 0xC7, 0x0, 0xD1, 0x0, 0xD2, 0x0, 0xD7, 0x0, 0xDE, 0x0, 0xF2, 0x0, 0x46, 0x1, 0xC4, 0x1, 0xC5, 0x1, 0xC6, 0x1, 
        0xC7, 0x1, 0xC9, 0x1, 0xCA, 0x1, 0xCC, 0x1, 0x90, 0xE, 0x8A, 0xE, 0x8B, 0xE, 0x9A, 0xE, 0x16, 0xF, 0xB9, 0x1, 0x41, 0x0, 0x8D, 0xE, 0x4E, 0xE, 
        0xC, 0xE, 0xCE, 0x0, 0xCB, 0x0, 0xC8, 0x0, 0xCF, 0x0, 0xC9, 0x0, 0xCA, 0x0]);

    // ???
    writeArray(rom, 0xC8864, [0x1, 0x30, 0x0, 0x9]);
    writeArray(rom, 0x1003000, [0x1, 0xB4, 0x8, 0x1C, 0x6, 0x4C, 0x7, 0x49, 0x8, 0x47, 0x1, 0x1C, 0x1, 0xBC, 0x6, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1003020, [0xB, 0x30, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0x29, 0x3B, 0xD, 0x8]);

    // ???
    writeArray(rom, 0xCF294, [0x0, 0x4C, 0x20, 0x47, 0x13, 0x30, 0x0, 0x9]);
    writeArray(rom, 0x1003012, [0x48, 0x46, 0x0, 0xF0, 0x1C, 0xF8, 0x80, 0x22, 0x4, 0x49, 0x8, 0x47]);
    writeArray(rom, 0x100302C, [0x9D, 0xF2, 0xC, 0x8]);

    // ???
    writeArray(rom, 0xD3B88, [0x0, 0x4C, 0x20, 0x47, 0x31, 0x30, 0x0, 0x9]);
    writeArray(rom, 0x1003030, [0x30, 0x1C, 0x0, 0xF0, 0xD, 0xF8, 0x2A, 0x1C, 0x0, 0x49, 0x8, 0x47, 0x91, 0x3B, 0xD, 0x8]);

    // Add custom handler for displaying item icons
    writeArray(rom, 0x3824C, [0x41, 0x30, 0x0, 0x9]);
    writeArray(rom, 0x1003040, [0xC, 0x4C, 0xD, 0x49, 0x9, 0x68, 0xD, 0x4A, 0x91, 0x42, 0x1, 0xD0, 0xC, 0x49, 0x8, 0x47, 0x0, 0x4, 0x0, 0xC, 0xA, 
        0x24, 0x24, 0x2, 0xA0, 0x42, 0x1, 0xDA, 0x9, 0x4C, 0x20, 0x47, 0x9, 0x4C, 0x21, 0x88, 0x4, 0x34, 0x88, 0x42, 0xFB, 0xD1, 0x2, 0x3C, 0x20, 0x88, 
        0x6F, 0xE0, 0x6, 0x4C, 0x20, 0x47, 0x51, 0x30, 0x0, 0x9, 0x20, 0x4, 0x0, 0x2, 0xBC, 0x0, 0x17, 0x0, 0xA1, 0x20, 0x0, 0x9, 0x2D, 0xD9, 0x3, 0x8, 
        0x90, 0x30, 0x0, 0x9, 0xBD, 0xD9, 0x3, 0x8, 0x10, 0xF, 0xBA, 0x0, 0x11, 0xF, 0xC0, 0x0, 0x12, 0xF, 0xC4, 0x0, 0x13, 0xF, 0xBD, 0x0, 0x14, 0xF, 
        0xC1, 0x0, 0x15, 0xF, 0xBB, 0x0, 0x16, 0xF, 0xC5, 0x0, 0x17, 0xF, 0xBE, 0x0, 0x18, 0xF, 0xC2, 0x0, 0x19, 0xF, 0xBF, 0x0, 0x1A, 0xF, 0xC6, 0x0, 
        0x1B, 0xF, 0xBC, 0x0, 0x1C, 0xF, 0xC3, 0x0, 0xC, 0xE, 0xA, 0x0, 0x4E, 0xE, 0x3A, 0x0, 0x8A, 0xE, 0xA4, 0x0, 0x8B, 0xE, 0xA5, 0x0, 0x8D, 0xE, 
        0x60, 0x0, 0x90, 0xE, 0x63, 0x0, 0x9A, 0xE, 0xA8, 0x0, 0x85, 0xE, 0x9F, 0x0, 0x86, 0xE, 0xA0, 0x0, 0x8E, 0xE, 0x61, 0x0, 0x21, 0xE, 0x1C, 0x0, 
        0x18, 0xE, 0x10, 0x0, 0x8F, 0xE, 0x62, 0x0, 0x93, 0xE, 0x66, 0x0, 0x94, 0xE, 0x67, 0x0, 0x87, 0xE, 0xA1, 0x0, 0x88, 0xE, 0xA2, 0x0, 0x89, 0xE, 
        0xA7, 0x0, 0x97, 0xE, 0xA3, 0x0, 0x98, 0xE, 0xA9, 0x0, 0x99, 0xE, 0xA6, 0x0, 0x9C, 0xE, 0xAC]);
    writeArray(rom, 0x1003150, [0x9, 0xA, 0xA, 0x29, 0x1, 0xD0, 0x1, 0x21, 0x0, 0xE0, 0x0, 0x21, 0x88, 0xE7]);

    // Add custom handler for showing the "you found an item" sequence
    writeArray(rom, 0xC8064, [0x1, 0x50, 0x0, 0x9]);
    writeArray(rom, 0x1005000, [0x2, 0x4C, 0x3, 0x49, 0x8, 0x47, 0x3, 0x4C, 0x20, 0x47, 0x0, 0x0, 0x7, 0x50, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0xD, 
        0x26, 0xD, 0x8]);

    // Function for adding "mapped" items depending on the item type
    writeArray(rom, 0x1005038, [0x1, 0xB4, 0x8, 0x1C, 0x11, 0x4C, 0x12, 0x49, 0x8, 0x47, 0x1, 0x1C, 0x1, 0xBC, 0xA, 0xA, 0xE, 0x2A, 0xF, 0xDB, 0xA, 0xD0, 
        0xF, 0x2A, 0x4, 0xD0, 0x80, 0x20, 0x0, 0x2, 0x8, 0x1A, 0xC, 0x4C, 0x20, 0x47, 0xFF, 0x20, 0x8, 0x40, 0xB, 0x4C, 0x20, 0x47, 0x9, 0x6, 0x9, 0xE, 
        0xA, 0x4C, 0x20, 0x47, 0xD, 0x2A, 0x4, 0xD0, 0xA, 0x1C, 0x1, 0x1C, 0x10, 0x1C, 0x8, 0x4C, 0x20, 0x47, 0x9, 0x7, 0x8, 0xF, 0x1, 0x21, 0x6, 0x4C, 
        0x20, 0x47, 0x43, 0x50, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0xB1, 0xFE, 0xA, 0x8, 0x95, 0xFF, 0xA, 0x8, 0xF5, 0xF6, 0xA, 0x8, 0xC9, 0xE6, 0xA, 0x8, 
        0xD9, 0x23, 0xD, 0x8]);

    // Add custom function for adding an item to the inventory
    writeArray(rom, 0xC807C, [0x19, 0x50, 0x0, 0x9]);
    writeArray(rom, 0x1005018, [0x1, 0xB4, 0x8, 0x1C, 0x3, 0x4C, 0x4, 0x49, 0x8, 0x47, 0x1, 0x1C, 0x1, 0xBC, 0x3, 0x4C, 0x20, 0x47, 0x0, 0x0, 0x23, 
        0x50, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0x6D, 0x29, 0xD, 0x8]);

    // ??? (Related to Psynergy use)
    writeArray(rom, 0xCE76E, [0x1, 0x48, 0x0, 0x47, 0x0, 0x0, 0x1, 0x5F, 0x0, 0x9]);
    writeArray(rom, 0x1005F00, [0xD, 0x48, 0x0, 0xF0, 0x17, 0xF8, 0x1, 0x28, 0x12, 0xD0, 0xC, 0x48, 0x0, 0x88, 0x36, 0x28, 0xE, 0xD0, 0xB, 0x48, 0x0, 
        0x68, 0xB, 0x4C, 0xA0, 0x42, 0x7, 0xD1, 0xA, 0x48, 0x0, 0xF0, 0x9, 0xF8, 0x0, 0x28, 0x2, 0xD0, 0x6, 0x48, 0x8, 0x49, 0x1, 0x60, 0x8, 0x48, 0x0, 
        0x47, 0x8, 0x48, 0x0, 0x47, 0x8, 0x4C, 0x20, 0x47, 0xFF, 0x9, 0x0, 0x0, 0x2C, 0x4, 0x0, 0x2, 0x50, 0x29, 0x0, 0x2, 0x71, 0x0, 0x1, 0x0, 0xFF, 
        0x8, 0x0, 0x0, 0x6E, 0x0, 0x1, 0x0, 0x95, 0xE7, 0xC, 0x8, 0x7B, 0xE7, 0xC, 0x8, 0xE5, 0x6C, 0x1, 0x8]);

    // Unknown floating pointers
    writeArray(rom, 0x1005F80, [0x19, 0x83, 0xB, 0x8, 0x5A, 0x5, 0x0, 0x2, 0x50, 0x29, 0x0, 0x2, 0xA0, 0x4, 0x0, 0x2, 0x20, 0x4, 0x0, 0x2, 0xDB, 0xE7, 
        0xC, 0x8]);

    // Functions for handling a mapped item being picked up
    writeArray(rom, 0x1006000, [0x7E, 0xB5, 0x2, 0xA, 0xFF, 0x21, 0x8, 0x40, 0xF, 0x21, 0xA, 0x40, 0xF, 0x2A, 0x7, 0xD0, 0xE, 0x2A, 0x8, 0xD0, 0xD, 0x2A, 
        0xC, 0xD0, 0xA, 0x2A, 0xD, 0xD0, 0x0, 0x20, 0x7E, 0xBD, 0x0, 0xF0, 0xE, 0xF8, 0xA, 0xE0, 0x1, 0x1C, 0x0, 0xF0, 0x17, 0xF8, 0x0, 0xF0, 0x13, 0xF8, 
        0x4, 0xE0, 0x0, 0xF0, 0x43, 0xF8, 0x1, 0xE0, 0x0, 0xF0, 0xDA, 0xF8, 0x1, 0x20, 0x7E, 0xBD, 0x1, 0xB5, 0x0, 0xF0, 0x4, 0xF8, 0x1, 0xBC, 0x0, 0xF0, 
        0x3, 0xF8, 0x0, 0xBD, 0x14, 0x4B, 0x18, 0x47, 0x14, 0x4C, 0x20, 0x47, 0x14, 0x4C, 0x20, 0x47, 0xFE, 0xB5, 0x0, 0xF0, 0x1E, 0xF8, 0x6, 0x1C, 0x12, 
        0x4D, 0x0, 0x27, 0xEC, 0x5D, 0x11, 0x48, 0x12, 0x49, 0x61, 0x43, 0x40, 0x18, 0x0, 0x21, 0x0, 0x22, 0x3, 0x68, 0x0, 0x2B, 0xE, 0xD0, 0x1B, 0xA, 0x80,
        0x2B, 0x0, 0xDA, 0x1, 0x31, 0xE, 0x29, 0x4, 0xD0, 0x1, 0x32, 0x1F, 0x2A, 0x1, 0xD0, 0x4, 0x30, 0xF1, 0xE7, 0x1, 0x37, 0xB7, 0x42, 0x0, 0xD0, 0xE6, 
        0xE7, 0xE8, 0x5D, 0xFE, 0xBD, 0x6, 0x48, 0x0, 0x47, 0x41, 0x83, 0x3, 0x8, 0x95, 0xFF, 0xA, 0x8, 0xD, 0x2A, 0xD, 0x8, 0x58, 0x4, 0x0, 0x2, 0x78, 0x5, 
        0x0, 0x2, 0x4C, 0x1, 0x0, 0x0, 0xBD, 0xFD, 0xA, 0x8]);
    writeArray(rom, 0x10061F0, [0x70, 0x47]);

    // Add custom function for handling party characters being picked up as pseudo-items
    writeArray(rom, 0x10060BC, [0xE0, 0xB5, 0x7, 0x1C, 0x0, 0xF0, 0x56, 0xF8, 0x0, 0x28, 0x29, 0xD1, 0x38, 0x1C, 0x0, 0x26, 0x3, 0x28, 0x1, 0xDC, 0x1F, 
        0x4D, 0x4, 0xE0, 0x7, 0x28, 0x1, 0xD0, 0x1E, 0x4D, 0x0, 0xE0, 0x1E, 0x4D, 0x28, 0x88, 0x69, 0x88, 0x0, 0x29, 0x5, 0xD0, 0xB8, 0x42, 0x1, 0xD1, 0xFA, 
        0xF7, 0x3C, 0xFC, 0x4, 0x35, 0xF5, 0xE7, 0x0, 0x2E, 0x2, 0xD1, 0x1, 0x26, 0x18, 0x4D, 0xF0, 0xE7, 0x0, 0xF0, 0x34, 0xF8, 0x80, 0x0, 0x20, 0x49, 0xD, 
        0x58, 0x0, 0x26, 0x28, 0x78, 0xFF, 0x28, 0x6, 0xD0, 0x1, 0x35, 0x29, 0x78, 0xFA, 0xF7, 0x7, 0xFC, 0x1, 0x35, 0x1, 0x36, 0xF5, 0xE7, 0x18, 0x4D, 0x2B, 
        0x78, 0x0, 0x2B, 0xC, 0xD0, 0x9, 0x2E, 0xA, 0xD0, 0x5A, 0x0, 0xA9, 0x5C, 0x52, 0x1C, 0xAA, 0x5C, 0x1, 0x3B, 0x2B, 0x70, 0x38, 0x46, 0x0, 0xF0, 0x1F, 
        0xF8, 0x1, 0x36, 0xEF, 0xE7, 0x38, 0x1C, 0xFA, 0xF7, 0x13, 0xFC, 0x38, 0x1C, 0x1, 0x21, 0x0, 0xF0, 0xA, 0xF8, 0xE0, 0xBD, 0x0, 0x0, 0xC, 0x1, 0xFA, 
        0x8, 0xE0, 0x0, 0xFA, 0x8, 0x0, 0x1, 0xFA, 0x8, 0x30, 0x1, 0xFA, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xD9, 0x23, 0xD, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xBD, 
        0xFD, 0xA, 0x8, 0x0, 0x4C, 0x20, 0x47, 0xE5, 0x6C, 0x1, 0x8, 0x0, 0x4C, 0x20, 0x47, 0x79, 0xB, 0xB, 0x8, 0x80, 0x29, 0x0, 0x2, 0x88, 0x61, 0x0, 0x9, 
        0xAC, 0x61, 0x0, 0x9, 0xAC, 0x61, 0x0, 0x9, 0xAE, 0x61, 0x0, 0x9, 0xB4, 0x61, 0x0, 0x9, 0xBC, 0x61, 0x0, 0x9, 0xC6, 0x61, 0x0, 0x9, 0xD2, 0x61, 0x0, 
        0x9, 0xE0, 0x61, 0x0, 0x9, 0xAC, 0x61, 0x0, 0x9, 0xFF, 0xFF, 0x1, 0x9, 0x1, 0xA, 0xFF, 0xFF, 0x0, 0x0, 0x2, 0x0, 0x3, 0x0, 0xFF, 0xFF, 0x0, 0x1, 0x1, 
        0x0, 0x2, 0x1, 0x3, 0x1, 0xFF, 0xFF, 0x1, 0x1, 0x0, 0x2, 0x1, 0x2, 0x2, 0x2, 0x3, 0x2, 0xFF, 0xFF, 0x0, 0x3, 0x1, 0x3, 0x2, 0x3, 0x3, 0x3, 0x0, 0x4, 
        0x1, 0x4, 0xFF, 0xFF, 0x2, 0x4, 0x3, 0x4, 0x0, 0x5, 0x1, 0x5, 0x2, 0x5, 0x3, 0x5, 0xFF, 0xFF]);

    // Add custom function for moving excess Djinn to party members that haven't joined yet
    writeArray(rom, 0xB0B4A, [0x1, 0x4C, 0x20, 0x47, 0x0, 0x0, 0x1, 0x6D, 0x0, 0x9]);
    writeArray(rom, 0x1006D00, [0x40, 0x46, 0x81, 0xB4, 0x0, 0xF0, 0x2B, 0xF8, 0x8, 0x28, 0x1F, 0xD0, 0x9, 0x25, 0x45, 0x43, 0x80, 0x46, 0x0, 0x26, 
        0x30, 0x27, 0x38, 0x1C, 0x0, 0xF0, 0x25, 0xF8, 0x36, 0x18, 0x1, 0x37, 0x80, 0x2F, 0xF8, 0xDB, 0xAE, 0x42, 0x11, 0xDB, 0x30, 0x1C, 0x46, 0x46, 
        0x7, 0x2E, 0xB, 0xD0, 0x47, 0x1B, 0x3, 0x2E, 0x2, 0xD1, 0x7, 0x2F, 0x6, 0xDB, 0x7, 0x3F, 0x0, 0x20, 0x3, 0x2F, 0x3, 0xDB, 0x3, 0x3F, 0x1, 0x30, 
        0xFA, 0xE7, 0x7, 0x20, 0x81, 0x46, 0x81, 0xBC, 0x80, 0x46, 0x39, 0x1C, 0x52, 0x46, 0x48, 0x46, 0x0, 0xF0, 0x4, 0xF8, 0x7, 0x4C, 0x20, 0x47, 0x3, 
        0x4C, 0x20, 0x47, 0x3, 0x4C, 0x20, 0x47, 0x3, 0x4C, 0x20, 0x47, 0x0, 0x0, 0xBD, 0xFD, 0xA, 0x8, 0x79, 0xB, 0xB, 0x8, 0xE5, 0x6C, 0x1, 0x8, 0x55, 
        0xB, 0xB, 0x8]);

    //=====================
    // Map Code Injections
    //=====================

    // World Map
    writeArray(rom, 0x1001864, [0x0, 0xB5, 0x7, 0x22, 0xFF, 0xF7, 0xE5, 0xFF, 0x26, 0x48, 0x1, 0x70, 0x82, 0x70, 0x26, 0x48, 0x3, 0x70, 0x84, 0x70, 0x83, 
        0x72, 0x4, 0x73, 0x24, 0x48, 0x3, 0x70, 0x84, 0x70, 0x24, 0x48, 0x2, 0x70, 0x3, 0x3A, 0x23, 0x48, 0x2, 0x70, 0x8, 0x22, 0xFF, 0xF7, 0xDC, 0xFF, 
        0x22, 0x48, 0x1, 0x70, 0x82, 0x70, 0x21, 0x48, 0x2, 0x70, 0x21, 0x48, 0x3, 0x70, 0xD, 0x22, 0xFF, 0xF7, 0xD2, 0xFF, 0x20, 0x48, 0x1, 0x70, 0x82, 
        0x70, 0x1F, 0x48, 0x2, 0x70, 0x1F, 0x48, 0x3, 0x70, 0x1A, 0x22, 0xFF, 0xF7, 0xC8, 0xFF, 0x1E, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1D, 0x48, 0x2, 0x70, 
        0x1D, 0x48, 0x3, 0x70, 0x1D, 0x22, 0xFF, 0xF7, 0xBE, 0xFF, 0x1C, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1B, 0x48, 0x2, 0x70, 0x1B, 0x48, 0x3, 0x70, 0x31, 
        0x22, 0xFF, 0xF7, 0xB4, 0xFF, 0x1A, 0x48, 0x1, 0x70, 0x82, 0x70, 0x19, 0x48, 0x2, 0x70, 0x19, 0x48, 0x3, 0x70, 0x42, 0x22, 0xFF, 0xF7, 0xAA, 0xFF, 
        0x18, 0x48, 0x1, 0x70, 0x82, 0x70, 0x17, 0x48, 0x2, 0x70, 0x17, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x0, 0x0, 0x50, 0xE3, 0x0, 0x2, 0x12, 0x9F, 0x0, 0x2, 
        0x42, 0xA5, 0x0, 0x2, 0xC, 0x91, 0x0, 0x2, 0xCE, 0xA2, 0x0, 0x2, 0x68, 0xE3, 0x0, 0x2, 0xF6, 0xE7, 0x0, 0x2, 0x7C, 0x80, 0x0, 0x2, 0xC8, 0xE3, 0x0, 
        0x2, 0x26, 0xE8, 0x0, 0x2, 0xC, 0x82, 0x0, 0x2, 0x80, 0xE3, 0x0, 0x2, 0x2, 0xE8, 0x0, 0x2, 0xE0, 0x80, 0x0, 0x2, 0x98, 0xE3, 0x0, 0x2, 0xE, 0xE8, 
        0x0, 0x2, 0x44, 0x81, 0x0, 0x2, 0xE0, 0xE3, 0x0, 0x2, 0x32, 0xE8, 0x0, 0x2, 0x70, 0x82, 0x0, 0x2, 0xB0, 0xE3, 0x0, 0x2, 0x1A, 0xE8, 0x0, 0x2, 0xA8,
        0x81, 0x0, 0x2]);

    // Djinni injections
    writeArray(rom, 0x1001964, [0x0, 0xB5, 0xFF, 0x22, 0x2F, 0x32, 0x95, 0x42, 0x14, 0xD0, 0x75, 0x2D, 0x1C, 0xD0, 0x7F, 0x2D, 0x23, 0xD0, 0x93, 0x2D, 
        0x2A, 0xD0, 0x92, 0x2D, 0x28, 0xD0, 0x88, 0x2D, 0x34, 0xD0, 0xEC, 0x2D, 0x46, 0xD0, 0xEB, 0x2D, 0x50, 0xD0, 0xFF, 0x22, 0x10, 0x32, 0x95, 0x42, 
        0x5B, 0xD0, 0x51, 0x2D, 0x6C, 0xD0, 0x0, 0xBD, 0x6, 0x22, 0xFF, 0xF7, 0x4C, 0xFF, 0x3A, 0x48, 0x1, 0x70, 0x82, 0x70, 0x39, 0x48, 0x3, 0x70, 0x84, 
        0x70, 0x0, 0xBD, 0x9, 0x22, 0xFF, 0xF7, 0x4C, 0xFF, 0x37, 0x48, 0x1, 0x70, 0x82, 0x70, 0x36, 0x48, 0x3, 0x70, 0x0, 0xBD, 0xA, 0x22, 0xFF, 0xF7, 
        0x43, 0xFF, 0x34, 0x48, 0x1, 0x70, 0x82, 0x70, 0x34, 0x48, 0x3, 0x70, 0x0, 0xBD, 0xB, 0x22, 0xFF, 0xF7, 0x3A, 0xFF, 0x32, 0x48, 0x1, 0x70, 0x82, 
        0x70, 0x31, 0x48, 0x1, 0x70, 0x82, 0x70, 0x2E, 0x48, 0x3, 0x70, 0x30, 0x48, 0x2, 0x70, 0x0, 0xBD, 0xC, 0x22, 0xFF, 0xF7, 0x2C, 0xFF, 0x2E, 0x48, 
        0x1, 0x70, 0x82, 0x70, 0x2D, 0x48, 0x3, 0x70, 0x0, 0xBD, 0xD, 0x22, 0xFF, 0xF7, 0x23, 0xFF, 0x2B, 0x48, 0x1, 0x70, 0x82, 0x70, 0x2B, 0x48, 0x2, 
        0x70, 0x2B, 0x48, 0x3, 0x70, 0x0, 0xBD, 0xE, 0x22, 0xFF, 0xF7, 0xE, 0xFF, 0x29, 0x48, 0x1, 0x70, 0x82, 0x70, 0x28, 0x48, 0x3, 0x70, 0x84, 0x70, 
        0x28, 0x48, 0x2, 0x70, 0x0, 0xBD, 0xF, 0x22, 0xFF, 0xF7, 0x2, 0xFF, 0x26, 0x48, 0x1, 0x70, 0x82, 0x70, 0x25, 0x48, 0x1, 0x70, 0x82, 0x70, 0x17, 
        0x48, 0x3, 0x70, 0x84, 0x70, 0x23, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x10, 0x22, 0xFF, 0xF7, 0xF3, 0xFE, 0x21, 0x48, 0x1, 0x70, 0x82, 0x70, 0x21, 0x48, 
        0x1, 0x70, 0x82, 0x70, 0xD, 0x48, 0x3, 0x70, 0x84, 0x70, 0x1F, 0x48, 0x2, 0x70, 0x1F, 0x48, 0x2, 0x70, 0x1F, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x11, 
        0x22, 0xFF, 0xF7, 0xEA, 0xFE, 0x1D, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1C, 0x48, 0x3, 0x70, 0x1C, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x0, 0x0, 0xB4, 0x96, 
        0x0, 0x2, 0x74, 0x88, 0x0, 0x2, 0x9C, 0xE4, 0x0, 0x2, 0x84, 0x82, 0x0, 0x2, 0xA8, 0x93, 0x0, 0x2, 0x3C, 0x80, 0x0, 0x2, 0x2C, 0xAD, 0x0, 0x2, 0x5C, 
        0xAD, 0x0, 0x2, 0xF4, 0x93, 0x0, 0x2, 0x10, 0x97, 0x0, 0x2, 0xB4, 0x83, 0x0, 0x2, 0xC8, 0xE3, 0x0, 0x2, 0x26, 0xE8, 0x0, 0x2, 0xC, 0x82, 0x0, 0x2, 
        0x48, 0xCD, 0x0, 0x2, 0xFC, 0x85, 0x0, 0x2, 0xD6, 0x94, 0x0, 0x2, 0x2C, 0x96, 0x0, 0x2, 0xEC, 0x96, 0x0, 0x2, 0xC8, 0x87, 0x0, 0x2, 0xD4, 0xCE, 
        0x0, 0x2, 0x3C, 0xD0, 0x0, 0x2, 0x80, 0x97, 0x0, 0x2, 0x48, 0xA7, 0x0, 0x2, 0x8C, 0xA9, 0x0, 0x2, 0xF0, 0x9C, 0x0, 0x2, 0xFA, 0x8C, 0x0, 0x2, 
        0x30, 0x97, 0x0, 0x2]);
    writeArray(rom, 0x1001AF8, [0x0, 0xB5, 0xFF, 0x22, 0x11, 0x32, 0x95, 0x42, 0x10, 0xD0, 0x14, 0x2D, 0x1B, 0xD0, 0xA1, 0x2D, 0x22, 0xD0, 0xC9, 0x2D, 
        0x29, 0xD0, 0xDB, 0x2D, 0x31, 0xD0, 0xF0, 0x2D, 0x39, 0xD0, 0xFF, 0x22, 0x1B, 0x32, 0x95, 0x42, 0x40, 0xD0, 0x89, 0x2D, 0x47, 0xD0, 0x0, 0xBD, 
        0x18, 0x22, 0xFF, 0xF7, 0x86, 0xFE, 0x27, 0x48, 0x1, 0x70, 0x82, 0x70, 0x26, 0x48, 0x1, 0x70, 0x82, 0x70, 0x26, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 
        0xBD, 0x19, 0x22, 0xFF, 0xF7, 0x83, 0xFE, 0x23, 0x48, 0x1, 0x70, 0x82, 0x70, 0x23, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x1E, 0x22, 0xFF, 0xF7, 0x7A, 0xFE, 
        0x21, 0x48, 0x1, 0x70, 0x82, 0x70, 0x20, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x1F, 0x22, 0xFF, 0xF7, 0x67, 0xFE, 0x1E, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1E, 
        0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x20, 0x22, 0xFF, 0xF7, 0x5D, 0xFE, 0x1B, 0x48, 0x1, 0x70, 0x82, 0x70, 0x15, 0x48, 0x3, 0x70, 0x84, 0x70, 
        0x0, 0xBD, 0x21, 0x22, 0xFF, 0xF7, 0x5D, 0xFE, 0x17, 0x48, 0x1, 0x70, 0x82, 0x70, 0x17, 0x48, 0x3, 0x70, 0x17, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x22, 
        0x22, 0xFF, 0xF7, 0x52, 0xFE, 0x15, 0x48, 0x1, 0x70, 0x82, 0x70, 0x14, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x23, 0x22, 0xFF, 0xF7, 0x49, 0xFE, 0x12, 0x48, 
        0x1, 0x70, 0x82, 0x70, 0x12, 0x48, 0x3, 0x70, 0x12, 0x48, 0x2, 0x70, 0x0, 0xBD, 0xEC, 0xD1, 0x0, 0x2, 0x9C, 0xD3, 0x0, 0x2, 0x94, 0x82, 0x0, 0x2, 
        0xF0, 0xDA, 0x0, 0x2, 0x84, 0x82, 0x0, 0x2, 0x78, 0xC7, 0x0, 0x2, 0x40, 0x83, 0x0, 0x2, 0x4, 0x9B, 0x0, 0x2, 0x3C, 0x80, 0x0, 0x2, 0xC, 0xA8, 0x0, 
        0x2, 0xA0, 0x93, 0x0, 0x2, 0x24, 0x83, 0x0, 0x2, 0x48, 0x8E, 0x0, 0x2, 0x24, 0xDE, 0x0, 0x2, 0x54, 0x80, 0x0, 0x2, 0x58, 0x97, 0x0, 0x2, 0xC0, 
        0x83, 0x0, 0x2, 0x18, 0x87, 0x0, 0x2]);
    writeArray(rom, 0x1001C10, [0x0, 0xB5, 0xE3, 0x2D, 0x1C, 0xD0, 0x23, 0x2D, 0x24, 0xD0, 0x24, 0x2D, 0x22, 0xD0, 0x26, 0x2D, 0x20, 0xD0, 0x27, 0x2D, 
        0x1E, 0xD0, 0x37, 0x2D, 0x2B, 0xD0, 0x66, 0x2D, 0x33, 0xD0, 0x2D, 0x2D, 0x3A, 0xD0, 0xAA, 0x2D, 0x42, 0xD0, 0xD1, 0x2D, 0x4A, 0xD0, 0xD8, 0x2D, 
        0x53, 0xD0, 0xEC, 0x2D, 0x5B, 0xD0, 0xE4, 0x2D, 0x63, 0xD0, 0xFF, 0x22, 0x19, 0x32, 0x95, 0x42, 0x67, 0xD0, 0x0, 0xBD, 0x2A, 0x22, 0xFF, 0xF7, 
        0xF0, 0xFD, 0x36, 0x48, 0x1, 0x70, 0x82, 0x70, 0x35, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x2B, 0x22, 0xFF, 0xF7, 0xF0, 0xFD, 0x33, 0x48, 0x1, 
        0x70, 0x33, 0x48, 0x1, 0x70, 0x33, 0x48, 0x1, 0x70, 0x33, 0x48, 0x1, 0x70, 0x82, 0x70, 0x32, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x2C, 0x22, 0xFF, 0xF7, 
        0xD7, 0xFD, 0x30, 0x48, 0x1, 0x70, 0x82, 0x70, 0x30, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x2D, 0x22, 0xFF, 0xF7, 0xD7, 0xFD, 0x2D, 0x48, 0x1, 
        0x70, 0x82, 0x70, 0x2D, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x2E, 0x22, 0xFF, 0xF7, 0xC4, 0xFD, 0x2B, 0x48, 0x1, 0x70, 0x82, 0x70, 0x2A, 0x48, 0x3, 0x70, 
        0x84, 0x70, 0x0, 0xBD, 0x2F, 0x22, 0xFF, 0xF7, 0xBA, 0xFD, 0x28, 0x48, 0x1, 0x70, 0x82, 0x70, 0x27, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x30, 
        0x22, 0xFF, 0xF7, 0xBA, 0xFD, 0x25, 0x48, 0x1, 0x70, 0x82, 0x70, 0x24, 0x48, 0x3, 0x70, 0x24, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x32, 0x22, 0xFF, 0xF7, 
        0xA5, 0xFD, 0x22, 0x48, 0x1, 0x70, 0x82, 0x70, 0x22, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x33, 0x22, 0xFF, 0xF7, 0x9B, 0xFD, 0x1F, 0x48, 0x1, 
        0x70, 0x82, 0x70, 0x1F, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x34, 0x22, 0xFF, 0xF7, 0x9B, 0xFD, 0x1C, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1C, 0x48, 
        0x3, 0x70, 0x35, 0x22, 0xFF, 0xF7, 0x93, 0xFD, 0x1A, 0x48, 0x1, 0x70, 0x82, 0x70, 0x1A, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x48, 0xD9, 0x0, 0x2, 0xA4, 
        0x85, 0x0, 0x2, 0x58, 0xC9, 0x0, 0x2, 0x58, 0xCC, 0x0, 0x2, 0xF0, 0xCD, 0x0, 0x2, 0xE0, 0xCE, 0x0, 0x2, 0x9A, 0x91, 0x0, 0x2, 0x90, 0x90, 0x0, 0x2, 
        0x50, 0x81, 0x0, 0x2, 0xC4, 0x98, 0x0, 0x2, 0x5C, 0x80, 0x0, 0x2, 0x18, 0xA6, 0x0, 0x2, 0x7E, 0x92, 0x0, 0x2, 0x48, 0xAF, 0x0, 0x2, 0xA2, 0x9F, 
        0x0, 0x2, 0x60, 0xB6, 0x0, 0x2, 0x8E, 0x82, 0x0, 0x2, 0x26, 0x95, 0x0, 0x2, 0x9C, 0xA5, 0x0, 0x2, 0x94, 0x82, 0x0, 0x2, 0x60, 0xCD, 0x0, 0x2, 0xC,
        0x86, 0x0, 0x2, 0x20, 0xDA, 0x0, 0x2, 0x98, 0x85, 0x0, 0x2, 0x9C, 0xDB, 0x0, 0x2, 0x48, 0x80, 0x0, 0x2]);
    writeArray(rom, 0x1001D98, [0x0, 0xB5, 0xDD, 0x2D, 0x1C, 0xD0, 0x19, 0x2D, 0x24, 0xD0, 0x1B, 0x2D, 0x22, 0xD0, 0x45, 0x2D, 0x2F, 0xD0, 0x3F, 0x2D, 0x36,
        0xD0, 0x6B, 0x2D, 0x3E, 0xD0, 0x9B, 0x2D, 0x45, 0xD0, 0xF3, 0x2D, 0x4D, 0xD0, 0xFF, 0x22, 0x5, 0x32, 0x95, 0x42, 0x53, 0xD0, 0xFA, 0x2D, 0x5A, 0xD0,
        0xFF, 0x22, 0xB, 0x32, 0x95, 0x42, 0x67, 0xD0, 0xFF, 0x22, 0x2E, 0x32, 0x95, 0x42, 0x6D, 0xD0, 0x0, 0xBD, 0x3C, 0x22, 0xFF, 0xF7, 0x2C, 0xFD, 0x94, 
        0x48, 0x1, 0x70, 0x82, 0x70, 0x93, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x3D, 0x22, 0xFF, 0xF7, 0x2C, 0xFD, 0x91, 0x48, 0x1, 0x70, 0x91, 0x48, 
        0x1, 0x70, 0x82, 0x70, 0x90, 0x48, 0x3, 0x70, 0x90, 0x48, 0x2, 0x70, 0x90, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x3E, 0x22, 0xFF, 0xF7, 0x1D, 0xFD, 0x8E, 
        0x48, 0x1, 0x70, 0x82, 0x70, 0x8E, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x3F, 0x22, 0xFF, 0xF7, 0xA, 0xFD, 0x8C, 0x48, 0x1, 0x70, 0x82, 0x70, 0x8B, 0x48, 
        0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x40, 0x22, 0xFF, 0xF7, 0xA, 0xFD, 0x89, 0x48, 0x1, 0x70, 0x82, 0x70, 0x88, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x41, 
        0x22, 0xFF, 0xF7, 0xF7, 0xFC, 0x86, 0x48, 0x1, 0x70, 0x82, 0x70, 0x86, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x43, 0x22, 0xFF, 0xF7, 0xED, 0xFC, 
        0x83, 0x48, 0x1, 0x70, 0x82, 0x70, 0x7B, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x44, 0x22, 0xFF, 0xF7, 0xED, 0xFC, 0x7F, 0x48, 0x1, 0x70, 0x82, 
        0x70, 0x7A, 0x48, 0x3, 0x70, 0x0, 0xBD, 0x45, 0x22, 0xFF, 0xF7, 0xE4, 0xFC, 0x7C, 0x48, 0x1, 0x70, 0x82, 0x70, 0x75, 0x48, 0x3, 0x70, 0x7A, 0x48, 
        0x2, 0x70, 0x7A, 0x48, 0x2, 0x70, 0x7A, 0x48, 0x2, 0x70, 0x7A, 0x48, 0x2, 0x70, 0x0, 0xBD, 0x46, 0x22, 0xFF, 0xF7, 0xC9, 0xFC, 0x78, 0x48, 0x1, 
        0x70, 0x82, 0x70, 0x6D, 0x48, 0x3, 0x70, 0x84, 0x70, 0x0, 0xBD, 0x47, 0x22, 0xFF, 0xF7, 0xC9, 0xFC, 0x74, 0x48, 0x1, 0x70, 0x82, 0x70, 0x74, 0x48, 
        0x3, 0x70, 0x0, 0xBD]);
    writeArray(rom, 0x1002030, [0x7C, 0xA7, 0x0, 0x2, 0xA4, 0x82, 0x0, 0x2, 0x0, 0xC1, 0x0, 0x2, 0x58, 0xC3, 0x0, 0x2, 0xDE, 0x82, 0x0, 0x2, 0x64, 0xB4, 
        0x0, 0x2, 0x62, 0xAD, 0x0, 0x2, 0xC, 0xCD, 0x0, 0x2, 0x84, 0x82, 0x0, 0x2, 0x7C, 0xDC, 0x0, 0x2, 0xB0, 0xCD, 0x0, 0x2, 0xE0, 0x96, 0x0, 0x2, 0x3C, 
        0x80, 0x0, 0x2, 0x88, 0xA4, 0x0, 0x2, 0x40, 0x83, 0x0, 0x2, 0x80, 0xD6, 0x0, 0x2, 0x74, 0xB3, 0x0, 0x2, 0xD4, 0xEE, 0x0, 0x2, 0x8E, 0x81, 0x0, 0x2, 
        0xE4, 0x81, 0x0, 0x2, 0xB2, 0x9E, 0x0, 0x2, 0xF0, 0xBB, 0x0, 0x2, 0x8, 0x9A, 0x0, 0x2, 0x6C, 0x96, 0x0, 0x2, 0x68, 0x88, 0x0, 0x2]);

    // Setting the randomiser flags (quite aggressively since it looks like it's done on every room load)
    writeArray(rom, 0x1006E00, [0x0, 0xB5, 0x6, 0x4D, 0x28, 0x88, 0x0, 0x21, 0x88, 0x42, 0x3, 0xD0, 0x0, 0xF0, 0x3, 0xF8, 0x2, 0x35, 0xF7, 0xE7, 0x0, 0xBD,
        0x2, 0x4C, 0x20, 0x47, 0x0, 0x0, 0x80, 0x42, 0xF, 0x8, 0xFD, 0x6C, 0x1, 0x8]);

    // Cutscene tablet injections
    writeArray(rom, 0x1007000, [0x6, 0x48, 0x0, 0x88, 0x59, 0x28, 0xB, 0xD0, 0xA9, 0x28, 0x29, 0xD0, 0xB1, 0x28, 0x41, 0xD0, 0xE9, 0x28, 0x59, 0xD0, 0xCD, 
        0x28, 0x71, 0xD0, 0x70, 0x47, 0x0, 0x0, 0x20, 0x4, 0x0, 0x2, 0x4, 0x48, 0x5, 0x49, 0x3C, 0xC8, 0x3C, 0xC1, 0x1C, 0xC8, 0x1C, 0xC1, 0x3, 0x48, 0x4, 
        0x49, 0x1, 0x80, 0x70, 0x47, 0x44, 0x70, 0x0, 0x9, 0x34, 0xC5, 0x0, 0x2, 0x90, 0x86, 0x0, 0x2, 0x70, 0x47, 0x0, 0x0, 0x60, 0xB5, 0x3, 0x4D, 0x3, 
        0x4E, 0x0, 0xF0, 0x1, 0xF8, 0x60, 0xBD, 0x2, 0x49, 0x8, 0x47, 0x90, 0xE, 0x0, 0x0, 0xD4, 0x8, 0x0, 0x0, 0x95, 0x71, 0x0, 0x9, 0x3, 0x48, 0x4, 0x49, 
        0x3C, 0xC8, 0x3C, 0xC1, 0x1C, 0xC8, 0x1C, 0xC1, 0x70, 0x47, 0x0, 0x0, 0x78, 0x70, 0x0, 0x9, 0x1C, 0x9A, 0x0, 0x2, 0x60, 0xB5, 0x3, 0x4D, 0x3, 0x4E, 
        0x0, 0xF0, 0x1, 0xF8, 0x60, 0xBD, 0x2, 0x49, 0x8, 0x47, 0x8A, 0xE, 0x0, 0x0, 0xAE, 0x9, 0x0, 0x0, 0x95, 0x71, 0x0, 0x9, 0x3, 0x48, 0x4, 0x49, 0x3C, 
        0xC8, 0x3C, 0xC1, 0x1C, 0xC8, 0x1C, 0xC1, 0x70, 0x47, 0x0, 0x0, 0xAC, 0x70, 0x0, 0x9, 0xCC, 0x99, 0x0, 0x2, 0x60, 0xB5, 0x3, 0x4D, 0x3, 0x4E, 0x0, 
        0xF0, 0x1, 0xF8, 0x60, 0xBD, 0x2, 0x49, 0x8, 0x47, 0x8B, 0xE, 0x0, 0x0, 0xBA, 0x9, 0x0, 0x0, 0x95, 0x71, 0x0, 0x9, 0x3, 0x48, 0x4, 0x49, 0x3C, 
        0xC8, 0x3C, 0xC1, 0x1C, 0xC8, 0x1C, 0xC1, 0x70, 0x47, 0x0, 0x0, 0xE0, 0x70, 0x0, 0x9, 0xCC, 0xB0, 0x0, 0x2, 0x60, 0xB5, 0x3, 0x4D, 0x3, 0x4E, 0x0, 
        0xF0, 0x1, 0xF8, 0x60, 0xBD, 0x2, 0x49, 0x8, 0x47, 0x9A, 0xE, 0x0, 0x0, 0xFA, 0x9, 0x0, 0x0, 0x95, 0x71, 0x0, 0x9, 0x8, 0x4C, 0x9, 0x49, 0x21, 
        0x60, 0x9, 0x4C, 0x9, 0x49, 0x21, 0x80, 0x9, 0x4C, 0xA, 0x49, 0x21, 0x80, 0xA, 0x4C, 0xA, 0x49, 0x21, 0x80, 0xA, 0x48, 0xB, 0x49, 0xC, 0xC8, 0xC, 
        0xC1, 0x70, 0x47, 0x0, 0x0, 0x3C, 0x93, 0x0, 0x2, 0x51, 0x71, 0x0, 0x9, 0xBA, 0x86, 0x0, 0x2, 0x16, 0xE0, 0x0, 0x0, 0x80, 0x86, 0x0, 0x2, 0x19, 
        0xE0, 0x0, 0x0, 0xDA, 0x83, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x48, 0x71, 0x0, 0x9, 0x44, 0x84, 0x0, 0x2, 0x0, 0x4A, 0x10, 0x47, 0x65, 0x71, 0x0, 0x9, 
        0x1, 0x4D, 0x2, 0x4E, 0x2, 0x49, 0x8, 0x47, 0x16, 0xF, 0x0, 0x0, 0xB, 0x9, 0x0, 0x0, 0x95, 0x71, 0x0, 0x9, 0x7, 0x48, 0x0, 0xF0, 0x57, 0xF8, 0x1, 
        0x28, 0x1, 0xD0, 0xE5, 0x20, 0x2, 0xE0, 0x5, 0x4A, 0xB3, 0x0, 0xD0, 0x58, 0x0, 0xF0, 0x2, 0xF8, 0x3, 0x4B, 0x18, 0x47, 0x3, 0x4C, 0x20, 0x47, 0xB, 
        0x9, 0x0, 0x0, 0x0, 0x97, 0x0, 0x2, 0x4D, 0x84, 0x0, 0x2, 0x9D, 0x84, 0x0, 0x2]);
    writeArray(rom, 0x1007194, [0x0, 0xB5, 0x30, 0x1C, 0x0, 0xF0, 0x3E, 0xF8, 0x1, 0x28, 0x11, 0xD0, 0x28, 0x1C, 0x9, 0x4C, 0x9, 0x49, 0x8, 0x47, 0x5, 
        0x1C, 0x0, 0xF0, 0x39, 0xF8, 0x0, 0x28, 0x5, 0xD1, 0x0, 0xF0, 0xD, 0xF8, 0x1, 0x28, 0x4, 0xD0, 0x0, 0xF0, 0x33, 0xF8, 0x30, 0x1C, 0x0, 0xF0, 0x2C, 
        0xF8, 0x0, 0xBD, 0x0, 0x0, 0xA9, 0x71, 0x0, 0x9, 0xA1, 0x20, 0x0, 0x9, 0x0, 0xB5, 0x0, 0xF0, 0x1B, 0xF8, 0x0, 0x28, 0x16, 0xDA, 0x28, 0x1C, 0x2, 
        0x21, 0x0, 0xF0, 0x17, 0xF8, 0x1B, 0x4D, 0x1, 0x21, 0x28, 0x1C, 0x4, 0x35, 0x0, 0xF0, 0x13, 0xF8, 0x1, 0x21, 0x28, 0x1C, 0x0, 0xF0, 0xF, 0xF8, 
        0x17, 0x4D, 0x2D, 0x88, 0xCD, 0x2D, 0x2, 0xD1, 0xE5, 0x25, 0x0, 0xF0, 0x10, 0xF8, 0x1, 0x20, 0x0, 0xBD, 0x0, 0x20, 0x0, 0xBD, 0x12, 0x4C, 0x20, 
        0x47, 0x12, 0x4C, 0x20, 0x47, 0x12, 0x4C, 0x20, 0x47, 0x12, 0x4C, 0x20, 0x47, 0x12, 0x4C, 0x20, 0x47, 0x12, 0x4C, 0x20, 0x47, 0x0, 0xB5, 0x28, 
        0x1C, 0x2, 0x21, 0x0, 0xF0, 0xA, 0xF8, 0x1, 0x21, 0xE1, 0x20, 0x0, 0x1, 0x1, 0x30, 0x0, 0xF0, 0x6, 0xF8, 0x28, 0x1C, 0x0, 0xF0, 0x5, 0xF8, 0x0, 
        0xBD, 0x6, 0x4C, 0x20, 0x47, 0x6, 0x4C, 0x20, 0x47, 0x9, 0x4C, 0x20, 0x47, 0x0, 0x0, 0xF, 0xE, 0x0, 0x0, 0x20, 0x4, 0x0, 0x2, 0x41, 0xEE, 0xA, 
        0x8, 0xD1, 0xCC, 0x3, 0x8, 0xAD, 0xA7, 0x3, 0x8, 0xE5, 0x6C, 0x1, 0x8, 0xFD, 0x6C, 0x1, 0x8, 0x1, 0x60, 0x0, 0x9, 0x29, 0xD0, 0xA, 0x8]);

    // Map logic injections
    writeArray(rom, 0x1007300, [0x2D, 0x48, 0x0, 0x68, 0x1, 0xC, 0x0, 0x4, 0x0, 0xC, 0x1, 0x28, 0x56, 0xD0, 0x2, 0x28, 0x56, 0xD0, 0xB0, 0x28, 0x56, 0xD0, 
        0xE, 0x28, 0x56, 0xD0, 0x11, 0x28, 0x56, 0xD0, 0x16, 0x28, 0x56, 0xD0, 0x19, 0x28, 0x56, 0xD0, 0x29, 0x28, 0x56, 0xD0, 0x2B, 0x28, 0x56, 0xD0, 
        0x2C, 0x28, 0x56, 0xD0, 0x2D, 0x28, 0x56, 0xD0, 0x2F, 0x28, 0x56, 0xD0, 0x31, 0x28, 0x56, 0xD0, 0x4C, 0x28, 0x56, 0xD0, 0x62, 0x28, 0x56, 0xD0, 
        0x66, 0x28, 0x56, 0xD0, 0x6A, 0x28, 0x56, 0xD0, 0x72, 0x28, 0x56, 0xD0, 0xBC, 0x28, 0x56, 0xD0, 0xE3, 0x28, 0x56, 0xD0, 0xE8, 0x28, 0x56, 0xD0, 
        0xE9, 0x28, 0x56, 0xD0, 0xF1, 0x28, 0x56, 0xD0, 0xF7, 0x28, 0x56, 0xD0, 0xFF, 0x21, 0x9, 0x31, 0x88, 0x42, 0x54, 0xD0, 0xFF, 0x21, 0x88, 0x42, 
        0x53, 0xD0, 0xFF, 0x21, 0x2, 0x31, 0x88, 0x42, 0x51, 0xD0, 0xFF, 0x21, 0x7, 0x31, 0x88, 0x42, 0x4F, 0xD0, 0xFF, 0x21, 0x4, 0x31, 0x88, 0x42, 0x4D, 
        0xD0, 0xFF, 0x21, 0xA, 0x31, 0x88, 0x42, 0x4B, 0xD0, 0xFF, 0x21, 0x1F, 0x31, 0x88, 0x42, 0x49, 0xD0, 0x1, 0x21, 0x9, 0x2, 0x30, 0x31, 0x88, 0x42, 
        0x46, 0xD0, 0x1, 0x21, 0x9, 0x2, 0x33, 0x31, 0x88, 0x42, 0x43, 0xD0, 0x70, 0x47, 0x0, 0x0, 0x20, 0x4, 0x0, 0x2, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 
        0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 
        0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 
        0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 
        0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 
        0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 0x47, 0x20, 0x48, 0x0, 
        0x47, 0xC5, 0x74, 0x0, 0x9, 0xD5, 0x74, 0x0, 0x9, 0xEB, 0x74, 0x0, 0x9, 0x11, 0x75, 0x0, 0x9, 0x2D, 0x75, 0x0, 0x9, 0x4D, 0x75, 0x0, 0x9, 0x69, 
        0x75, 0x0, 0x9, 0x85, 0x75, 0x0, 0x9, 0xD5, 0x75, 0x0, 0x9, 0x51, 0x76, 0x0, 0x9, 0x71, 0x76, 0x0, 0x9, 0x85, 0x76, 0x0, 0x9, 0x95, 0x76, 0x0, 0x9, 
        0x3D, 0x76, 0x0, 0x9, 0xA5, 0x76, 0x0, 0x9, 0xF1, 0x76, 0x0, 0x9, 0x1, 0x77, 0x0, 0x9, 0xD, 0x77, 0x0, 0x9, 0x19, 0x77, 0x0, 0x9, 0xA5, 0x77, 0x0, 
        0x9, 0xAD, 0x77, 0x0, 0x9, 0xB5, 0x77, 0x0, 0x9, 0xBD, 0x77, 0x0, 0x9, 0xC5, 0x77, 0x0, 0x9, 0xCD, 0x77, 0x0, 0x9, 0xDF, 0x77, 0x0, 0x9, 0xF7, 0x77,
        0x0, 0x9, 0x11, 0x78, 0x0, 0x9, 0x19, 0x78, 0x0, 0x9, 0x21, 0x78, 0x0, 0x9, 0x2D, 0x78, 0x0, 0x9, 0xD1, 0x78, 0x0, 0x9, 0xE1, 0x78, 0x0, 0x9]);

    // Logic injection - Main menu - Change game starting location
    writeArray(rom, 0x10074C4, [0x1, 0x48, 0x2, 0x49, 0x1, 0x60, 0x70, 0x47, 0x9C, 0x86, 0x0, 0x2, 0x9, 0x20, 0x2, 0x21]);

    // Logic injection - World map - Skip the Echo tutorial
    writeArray(rom, 0x10074D4, [0x70, 0x47]);

    // Logic injection - Gaia Rock exterior - Replace Dancing Idol sprite
    writeArray(rom, 0x10074EA, [0x7, 0x48, 0x7, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x1007508, [0x8C, 0x93, 0x0, 0x2, 0xE8, 0x1]);

    // Logic injection - Kandorean Temple - Prevent door shuffle softlock for entrance 14:6
    writeArray(rom, 0x1007510, [0x4, 0x48, 0x6, 0x29, 0x2, 0xD0, 0x0, 0x21, 0x1, 0x60, 0x1, 0xE0, 0x2, 0x49, 0x41, 0x80, 0x70, 0x47, 0x0, 0x0, 0x4, 
        0xAA, 0x0, 0x2, 0xB, 0xD0]);

    // Logic injection - Kandorean Temple - Dynamically adjust pillar position on map 17
    writeArray(rom, 0x100752C, [0x6, 0x4A, 0x3, 0x29, 0x4, 0xD0, 0x1, 0x29, 0x5, 0xD0, 0x1, 0x20, 0x10, 0x70, 0x4, 0xE0, 0x2, 0x20, 0x10, 0x70, 0x1, 
        0xE0, 0x0, 0x20, 0x10, 0x70, 0x70, 0x47, 0xA0, 0x0, 0x0, 0x2]);

    // Logic injection - Kandorean Temple - Lash rope and unlock front gate when entering final room
    writeArray(rom, 0x100754C, [0x0, 0xB5, 0x4, 0x29, 0x4, 0xDB, 0x6, 0x29, 0x2, 0xDC, 0x2, 0x48, 0x0, 0xF0, 0x4, 0xF8, 0x0, 0xBD, 0x0, 0x0, 0x49, 0x8]);

    // Logic injection - SotSG - Fix Breath cutscene bugging out from opposite side
    writeArray(rom, 0x1007568, [0x3, 0x48, 0x4, 0x49, 0x41, 0x80, 0x4, 0x49, 0x41, 0x60, 0x70, 0x47]);
    writeArray(rom, 0x1007578, [0x70, 0xC7, 0x0, 0x2, 0x75, 0x8, 0x0, 0x0, 0x31, 0xA4, 0x0, 0x2]);

    // Logic injection - Lemurian Ship - Various changes
    writeArray(rom, 0x1007584, [0x0, 0xB5, 0xC, 0x48, 0xC, 0x49, 0x1, 0x80, 0xC, 0x48, 0xD, 0x49, 0x1, 0x80, 0xD, 0x48, 0xB, 0x49, 0x1, 0x80, 0xC, 0x48, 
        0x0, 0x88, 0x9, 0x28, 0x7, 0xD1, 0xF2, 0x20, 0x0, 0xF0, 0x6, 0xF8, 0x90, 0x20, 0x0, 0x1, 0x7, 0x30, 0x0, 0xF0, 0x30, 0xF8, 0x0, 0xBD, 0x7, 0x4C, 
        0x20, 0x47, 0x0, 0x0, 0x3A, 0x84, 0x0, 0x2, 0x5, 0xE0, 0x0, 0x0, 0x44, 0x93, 0x0, 0x2, 0x3, 0xE0, 0x0, 0x0, 0x4, 0x99, 0x0, 0x2, 0x22, 0x4, 0x0, 
        0x2, 0x99, 0xF2, 0xA, 0x8]);

    // Logic injection - East Indra Shore - ???
    writeArray(rom, 0x10075D4, [0x0, 0xB5, 0x7, 0x20, 0x0, 0xF0, 0x1C, 0xF8, 0x0, 0x28, 0x14, 0xD0, 0xF2, 0x20, 0x0, 0xF0, 0x13, 0xF8, 0x0, 0x28, 0xA, 
        0xDA, 0xB, 0x49, 0xB, 0x48, 0x1, 0x80, 0xB, 0x48, 0x1, 0x80, 0xB, 0x48, 0x1, 0x80, 0xB, 0x48, 0xC, 0x49, 0x1, 0x80, 0x4, 0xE0, 0x90, 0x20, 0x0, 
        0x1, 0x85, 0x30, 0x0, 0xF0, 0x3, 0xF8, 0x0, 0xBD, 0x8, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1007614, [0x8, 0x4C, 0x20, 0x47, 0x70, 0x47, 0x0, 0x0, 0x78, 0x91, 0x0, 0x2, 0x74, 0x90, 0x0, 0x2, 0x8C, 0x92, 0x0, 0x2, 0x2E, 
        0xA4, 0x0, 0x2, 0xFF, 0x8, 0x0, 0x0, 0xC9, 0xEE, 0xA, 0x8, 0xFD, 0x6C, 0x1, 0x8, 0xE5, 0x6C, 0x1, 0x8]);

    // Logic injection - Yampo Desert - Auto-Scoop the geyser in the King Scorpion room
    writeArray(rom, 0x100763C, [0x0, 0xB5, 0x2, 0x29, 0x4, 0xD1, 0x8, 0x20, 0x0, 0x2, 0xED, 0x30, 0xFF, 0xF7, 0x8C, 0xFF, 0x0, 0xBD]);

    // Logic injection - Madra - Skip pre-Gondowan state
    writeArray(rom, 0x1007650, [0x3, 0x48, 0x4, 0x49, 0x1, 0x80, 0x4, 0x48, 0x4, 0x49, 0x1, 0x80, 0x70, 0x47, 0x0, 0x0, 0xC2, 0x86, 0x0, 0x2, 0x6, 0xE0, 
        0x0, 0x0, 0x3A, 0x86, 0x0, 0x2, 0x10, 0xE0]);
    writeArray(rom, 0x1007670, [0x2, 0x29, 0x2, 0xD1, 0x1, 0x48, 0x2, 0x49, 0x1, 0x80, 0x70, 0x47, 0xEE, 0x84, 0x0, 0x2, 0x5, 0xE0]);
    writeArray(rom, 0x1007684, [0x1, 0x48, 0x2, 0x49, 0x1, 0x80, 0x70, 0x47, 0xC6, 0x8E, 0x0, 0x2, 0x5, 0xE0]);
    writeArray(rom, 0x1007694, [0x1, 0x48, 0x2, 0x49, 0x1, 0x80, 0x70, 0x47, 0x42, 0x8F, 0x0, 0x2, 0x36, 0xE0]);

    // Logic injection - Eastern Alhafra - Skip mayor's mansion cutscene
    writeArray(rom, 0x10076A4, [0x0, 0xB5, 0xD, 0x48, 0xD, 0x49, 0x9, 0x68, 0x1, 0x60, 0x80, 0x20, 0x0, 0x1, 0xA7, 0x30, 0x0, 0xF0, 0x18, 0xF8, 0x0, 
        0x28, 0xE, 0xD0, 0x90, 0x20, 0x0, 0x1, 0x5, 0x30, 0xFF, 0xF7, 0x4F, 0xFF, 0x90, 0x20, 0x0, 0x1, 0xF, 0x30, 0xFF, 0xF7, 0x4A, 0xFF, 0x90, 0x20, 
        0x0, 0x1, 0x7F, 0x30, 0xFF, 0xF7, 0x45, 0xFF, 0x0, 0xBD, 0xF4, 0xA9, 0x0, 0x2, 0xE4, 0x76, 0x0, 0x9, 0x62, 0x20, 0x1, 0x21, 0x0, 0x4C, 0x20, 
        0x47, 0xE5, 0x6C, 0x1, 0x8]);

    // Logic injection - Gondowan Cliffs - Remove the cutscene that prevents leaving Gondowan without clearing Gabomba
    writeArray(rom, 0x10076F0, [0x1, 0x48, 0x2, 0x49, 0x1, 0x80, 0x70, 0x47, 0xB6, 0x89, 0x0, 0x2, 0xF, 0xE0]);

    // Logic injection - Naribwe interior - Change fortune teller event (just flips the yes/no choice, it's useless)
    writeArray(rom, 0x1007700, [0x1, 0x48, 0x1, 0x21, 0x1, 0x70, 0x70, 0x47, 0x2A, 0x83, 0x0, 0x2]);

    // Logic injection - Kibombo North - Stop Piers from leaving the party when exiting
    writeArray(rom, 0x100770C, [0x1, 0x48, 0x1, 0x21, 0x1, 0x70, 0x70, 0x47, 0x24, 0x92, 0x0, 0x2]);

    // Logic injection - Champa Caves - Change logic to allow for handing Obaba the prongs out of order
    writeArray(rom, 0x1007718, [0x3, 0x48, 0x1, 0x21, 0x1, 0x70, 0x3, 0x48, 0x3, 0x49, 0xC, 0xC8, 0xC, 0xC1, 0x70, 0x47, 0xE2, 0x94, 0x0, 0x2, 0x34, 
        0x77, 0x0, 0x9, 0xC4, 0x8F, 0x0, 0x2, 0x0, 0x4C, 0x20, 0x47, 0x3D, 0x77, 0x0, 0x9]);
    writeArray(rom, 0x100773C, [0x7B, 0x20, 0x0, 0x1, 0xE, 0x30, 0x40, 0x19, 0xFF, 0xF7, 0xE, 0xFF, 0x0, 0x26, 0x90, 0x20, 0x0, 0x1, 0x75, 0x30, 0x0, 
        0xF0, 0x26, 0xF8, 0x36, 0x18, 0x90, 0x20, 0x0, 0x1, 0x76, 0x30, 0x0, 0xF0, 0x20, 0xF8, 0x36, 0x18, 0x90, 0x20, 0x0, 0x1, 0x77, 0x30, 0x0, 0xF0, 
        0x1A, 0xF8, 0x36, 0x18, 0x1, 0x2E, 0x3, 0xD0, 0x2, 0x2E, 0x6, 0xD0, 0x6, 0x48, 0x0, 0x47, 0x28, 0x1C, 0x0, 0xF0, 0xC, 0xF8, 0x4, 0x48, 0x0, 0x47, 
        0x28, 0x1C, 0x0, 0xF0, 0x9, 0xF8, 0x2, 0x48, 0x0, 0x47, 0x0, 0x0, 0x1F, 0x90, 0x0, 0x2, 0x1D, 0x91, 0x0, 0x2, 0x28, 0x4C, 0x20, 0x47, 0x28, 0x4C, 
        0x20, 0x47, 0x28, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x100783C, [0x5, 0x88, 0x0, 0x2, 0x79, 0x89, 0x0, 0x2, 0xE5, 0x6C, 0x1, 0x8]);

    // ! - CHANGE TO THE ABOVE - !
    // Disabling part of the injected Champa map code because the Trident would appear early on room reload
    writeArray(rom, 0x100771E, [0x70, 0x47]);

    // Logic injection - Magma Rock interior - Various
    writeArray(rom, 0x10077A4, [0x28, 0x48, 0x29, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x10077AC, [0x28, 0x48, 0x29, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x10077B4, [0x28, 0x48, 0x29, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x1007848, [0x18, 0xBF, 0x0, 0x2, 0xC, 0xE0, 0x0, 0x0, 0xA8, 0xA3, 0x0, 0x2, 0x12, 0xE0, 0x0, 0x0, 0xD4, 0xA7, 0x0, 0x2, 0x70, 
        0x47, 0x0, 0x0]);

    // Logic injection - Shaman Village - Skip Whirlwind stone cutscene
    writeArray(rom, 0x10077BC, [0x28, 0x48, 0x27, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x100785C, [0x70, 0x47, 0x0, 0x0, 0x80, 0x93, 0x0, 0x2]);

    // Logic injection - Trial Road - ???
    writeArray(rom, 0x10077C4, [0x27, 0x48, 0x28, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x1007864, [0xF6, 0xAA, 0x0, 0x2, 0x5, 0xE0]);

    // Logic injection - Jupiter Lighthouse aerie - ???
    writeArray(rom, 0x10077CC, [0x27, 0x48, 0xA0, 0x21, 0x1, 0x70, 0x23, 0x21, 0x1, 0x71, 0x26, 0x48, 0x26, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x100786C, [0x1A, 0x85, 0x0, 0x2, 0x7C, 0x88, 0x0, 0x2]);

    // Logic injection - Jupiter Lighthouse 1F - ???
    writeArray(rom, 0x10077DE, [0x26, 0x4A, 0x12, 0x88, 0x3, 0x2A, 0x6, 0xD0, 0x6, 0x2A, 0x4, 0xD0, 0x7, 0x2A, 0x2, 0xD0, 0x23, 0x48, 
        0x20, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x100787C, [0xC8, 0x8A, 0x0, 0x2]);

    // Logic injection - Jupiter Lighthouse 2F - ???
    writeArray(rom, 0x10077F6, [0x20, 0x4A, 0x12, 0x88, 0x1, 0x2A, 0x7, 0xD0, 0x4, 0x2A, 0x5, 0xD0, 0x1F, 0x48, 0x1B, 0x49, 0x1, 0x80, 
        0x1E, 0x48, 0x1F, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x1007880, [0xC4, 0x86, 0x0, 0x2, 0x22, 0x85, 0x0, 0x2, 0x4, 0xE0, 0x0, 0x0]);

    // Logic injection - Jupiter Lighthouse Wings - ???
    writeArray(rom, 0x1007810, [0x1E, 0x48, 0x18, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x100788C, [0x84, 0x84, 0x0, 0x2]);

    // Logic injection - Jupiter Lighthouse (upper) - ???
    writeArray(rom, 0x1007818, [0x1D, 0x48, 0x16, 0x49, 0x1, 0x80, 0x70, 0x47]);
    writeArray(rom, 0x1007890, [0xC8, 0x83, 0x0, 0x2]);

    // Logic injection - Jupiter Lighthouse aerie (alt) - ???
    writeArray(rom, 0x1007820, [0x1C, 0x48, 0x1D, 0x49, 0x1, 0x70, 0x1D, 0x49, 0x1, 0x72, 0x70, 0x47]);
    writeArray(rom, 0x1007894, [0xB2, 0xE7, 0x0, 0x2, 0xF2, 0x1, 0x0, 0x0, 0x48, 0x1]);

    // Logic injection - Mars Lighthouse basement - ???
    writeArray(rom, 0x100782C, [0x1C, 0x48, 0xDE, 0x21, 0x1, 0x70, 0x1C, 0x48, 0x1C, 0x49, 0xC, 0xC8, 0xC, 0xC1, 0x70, 0x47]);
    writeArray(rom, 0x10078A0, [0x4A, 0x8B, 0x0, 0x2, 0xAC, 0x78, 0x0, 0x9, 0x6A, 0x8C, 0x0, 0x2, 0x0, 0x4C, 0x20, 0x47, 0xB5, 0x78, 0x0, 0x9]);
    writeArray(rom, 0x10078B4, [0xDE, 0x25, 0x2, 0x4E, 0x0, 0xF0, 0x6, 0xF8, 0x1, 0x4D, 0x28, 0x47, 0x3A, 0xA, 0x0, 0x0, 0x7F, 0x8C, 0x0, 0x2]);
    writeArray(rom, 0x10078C8, [0x0, 0x49, 0x8, 0x47, 0x95, 0x71, 0x0, 0x9]);

    // Logic injection - Anemos Inner Sanctum - ???
    writeArray(rom, 0x10078D0, [0x2, 0x48, 0x0, 0x21, 0x1, 0x80, 0x41, 0x80, 0x70, 0x47, 0x0, 0x0, 0xDE, 0x9D, 0x0, 0x2, 0x2, 0x48, 0x0, 0x21, 
        0x1, 0x80, 0x41, 0x80, 0x70, 0x47, 0x0, 0x0, 0x4E, 0x9E, 0x0, 0x2]);

    // Common thunks and data
    writeArray(rom, 0x1007564, [0x3, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1007574, [0xFD, 0x6C, 0x1, 0x8]);
    writeArray(rom, 0x1007610, [0x8, 0x4C, 0x20, 0x47]);
    writeArray(rom, 0x1007634, [0xFD, 0x6C, 0x1, 0x8]);
    writeArray(rom, 0x1007874, [0x6, 0xE0]);
    writeArray(rom, 0x1007878, [0x22, 0x4, 0x0, 0x2]);
}

function applyToMapCode(mapCode) {
    // World Map - Skip Echo tutorial
    mapCode[1611][0] = true;
    mapCode[1611][1][0x117E] = 0xB;
    writeArray(mapCode[1611][1], 0x1EB6, [0x44, 0xE3]);

    // Daila - Remove scaling on the sanctum item
    mapCode[1618][0] = true;
    writeArray(mapCode[1618][1], 0xB5E, [0x7, 0xE0]);

    // Taopo Swamp - Fix auto-run causing sink speeds to be swapped around
    mapCode[1656][0] = true;
    writeArray(mapCode[1656][1], 0x218C, [0x1, 0xF0, 0x32, 0xFA, 0x5, 0xE0]);
    writeArray(mapCode[1656][1], 0x35F4, [0x0, 0xB5, 0x2, 0x22, 0x6, 0x48, 0x0, 0x78, 0x0, 0x28, 0x0, 0xD0, 0x53, 0x40, 0xA0, 0x20, 0x13, 0x40, 
        0x40, 0x1, 0x0, 0x2B, 0x2, 0xD0, 0x43, 0x0, 0x1B, 0x18, 0x58, 0x10, 0x0, 0xBD, 0x0, 0x79, 0x0, 0x9]);

    // Trial Road - Prevent the summit doors from closing and allow forfeiting after clearing
    mapCode[1687][0] = true;
    writeArray(mapCode[1687][1], 0x34E, [0x2, 0xE0]);
    writeArray(mapCode[1687][1], 0x1760, [0x34, 0xE0]);
}

function changeRomSize(rom) {
    let newRom = new Uint8Array(0x1007910);
    newRom.set(rom);
    return newRom;
}

module.exports = {apply, applyToMapCode, changeRomSize};